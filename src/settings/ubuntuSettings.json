{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1272.37030",
      "templateHash": "10163816936936078687"
    }
  },
  "parameters": {
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located including a trailing '/'"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "secureString",
      "defaultValue": "",
      "metadata": {
        "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
      }
    },
    "esSettings": {
      "type": "object",
      "metadata": {
        "description": "The Elasticsearch settings"
      }
    },
    "elasticTags": {
      "type": "object",
      "metadata": {
        "description": "Unique identifiers to allow the Azure Infrastructure to understand the origin of resources deployed to Azure. You do not need to supply a value for this."
      }
    },
    "commonVmSettings": {
      "type": "object",
      "metadata": {
        "description": "Shared VM settings"
      }
    },
    "topologySettings": {
      "type": "object",
      "metadata": {
        "description": "Aggregate for topology variable"
      }
    },
    "networkSettings": {
      "type": "object",
      "metadata": {
        "description": "Network settings"
      }
    },
    "azureCloudStorageAccount": {
      "type": "secureObject",
      "metadata": {
        "description": "The storage settings for the Azure Cloud plugin"
      }
    },
    "kibanaIp": {
      "type": "string",
      "metadata": {
        "description": "The public IP address for Kibana"
      }
    },
    "sharedStorageAccount": {
      "type": "secureObject",
      "metadata": {
        "description": "The shared storage settings"
      }
    }
  },
  "variables": {
    "quote": "'",
    "doublequote": "\"",
    "backslash": "\\",
    "escapedQuote": "[format('{0}{1}{2}{3}{4}', variables('quote'), variables('doublequote'), variables('quote'), variables('doublequote'), variables('quote'))]",
    "namespacePrefix": "[parameters('topologySettings').vmHostNamePrefix]",
    "kibanaDomainName": "[if(not(empty(parameters('esSettings').samlMetadataUri)), if(not(empty(parameters('esSettings').samlServiceProviderUri)), parameters('esSettings').samlServiceProviderUri, parameters('kibanaIp')), '')]",
    "loadBalancerIp": "[format('{0}://{1}:9200', if(equals(parameters('networkSettings').https, 'Yes'), 'https', 'http'), parameters('topologySettings').vNetLoadBalancerIp)]",
    "dataNodeShortOpts": {
      "No": "z",
      "Yes": ""
    },
    "dataNodeShortOpt": "[variables('dataNodeShortOpts')[parameters('topologySettings').dataNodesAreMasterEligible]]",
    "dedicatedMasterNodesShortOpts": {
      "No": "d",
      "Yes": ""
    },
    "dedicatedMasterNodesShortOpt": "[variables('dedicatedMasterNodesShortOpts')[parameters('topologySettings').dataNodesAreMasterEligible]]",
    "installAzureCloudPluginShortOpts": {
      "No": "",
      "Yes": "j"
    },
    "installAzureCloudPluginShortOpt": "[variables('installAzureCloudPluginShortOpts')[parameters('azureCloudStorageAccount').install]]",
    "azureCloudStorageName": "[if(equals(parameters('azureCloudStorageAccount').install, 'Yes'), if(empty(parameters('azureCloudStorageAccount').name), parameters('sharedStorageAccount').name, parameters('azureCloudStorageAccount').name), '')]",
    "azureCloudStorageKey": "[if(equals(parameters('azureCloudStorageAccount').install, 'Yes'), if(empty(parameters('azureCloudStorageAccount').key), parameters('sharedStorageAccount').key, parameters('azureCloudStorageAccount').key), '')]",
    "azureCloudStorageSuffix": "[if(equals(parameters('azureCloudStorageAccount').install, 'Yes'), if(empty(parameters('azureCloudStorageAccount').name), parameters('sharedStorageAccount').suffix, parameters('azureCloudStorageAccount').suffix), '')]",
    "installPluginsShortOpts": {
      "No": "",
      "Yes": "l"
    },
    "installPluginsShortOpt": "[variables('installPluginsShortOpts')[parameters('esSettings').installPlugins]]",
    "commonShortOpts": "[format('{0}{1}{2}n ', variables('dedicatedMasterNodesShortOpt'), variables('installPluginsShortOpt'), variables('installAzureCloudPluginShortOpt'))]",
    "commonInstallParams": "[format('{0}{1}{2} -v {3}{4}{5} -m {6} -A {7}{8}{9} -R {10}{11}{12} -K {13}{14}{15} -S {16}{17}{18} -F {19}{20}{21} -M {22}{23}{24} -B {25}{26}{27} -Z {28} -p {29}{30}{31} -a {32}{33}{34} -k {35}{36}{37} -E {38}{39}{40} -L {41}{42}{43} -C {44}{45}{46} -D {47}{48}{49} -H {50}{51}{52} -G {53}{54}{55} -V {56}{57}{58} -J {59}{60}{61} -T {62}{63}{64} -W {65}{66}{67} -N {68}{69}{70} -O {71}{72}{73} -P {74}{75}{76}', variables('quote'), parameters('esSettings').clusterName, variables('quote'), variables('quote'), parameters('esSettings').version, variables('quote'), parameters('esSettings').heapSize, variables('quote'), replace(parameters('esSettings').securityAdminPwd, variables('quote'), variables('escapedQuote')), variables('quote'), variables('quote'), replace(parameters('esSettings').securityRemoteMonitoringPwd, variables('quote'), variables('escapedQuote')), variables('quote'), variables('quote'), replace(parameters('esSettings').securityKibanaPwd, variables('quote'), variables('escapedQuote')), variables('quote'), variables('quote'), replace(parameters('esSettings').securityLogstashPwd, variables('quote'), variables('escapedQuote')), variables('quote'), variables('quote'), replace(parameters('esSettings').securityBeatsPwd, variables('quote'), variables('escapedQuote')), variables('quote'), variables('quote'), replace(parameters('esSettings').securityApmPwd, variables('quote'), variables('escapedQuote')), variables('quote'), variables('quote'), replace(parameters('esSettings').securityBootstrapPwd, variables('quote'), variables('escapedQuote')), variables('quote'), parameters('topologySettings').vmDataNodeCount, variables('quote'), variables('namespacePrefix'), variables('quote'), variables('quote'), variables('azureCloudStorageName'), variables('quote'), variables('quote'), variables('azureCloudStorageKey'), variables('quote'), variables('quote'), variables('azureCloudStorageSuffix'), variables('quote'), variables('quote'), parameters('esSettings').installAdditionalPlugins, variables('quote'), variables('quote'), replace(replace(parameters('esSettings').yamlConfiguration, variables('quote'), variables('escapedQuote')), format('{0}{1}', variables('backslash'), variables('doublequote')), variables('doublequote')), variables('quote'), variables('quote'), parameters('topologySettings').vNetLoadBalancerIp, variables('quote'), variables('quote'), parameters('esSettings').httpCertBlob, variables('quote'), variables('quote'), replace(parameters('esSettings').httpCertPassword, variables('quote'), variables('escapedQuote')), variables('quote'), variables('quote'), parameters('esSettings').httpCaCertBlob, variables('quote'), variables('quote'), replace(parameters('esSettings').httpCaCertPassword, variables('quote'), variables('escapedQuote')), variables('quote'), variables('quote'), parameters('esSettings').transportCaCertBlob, variables('quote'), variables('quote'), replace(parameters('esSettings').transportCaCertPassword, variables('quote'), variables('escapedQuote')), variables('quote'), variables('quote'), replace(parameters('esSettings').transportCertPassword, variables('quote'), variables('escapedQuote')), variables('quote'), variables('quote'), parameters('esSettings').samlMetadataUri, variables('quote'), variables('quote'), variables('kibanaDomainName'), variables('quote'))]",
    "ubuntuScripts": [
      "[uri(parameters('_artifactsLocation'), format('scripts/elasticsearch-install.sh{0}', parameters('_artifactsLocationSasToken')))]",
      "[uri(parameters('_artifactsLocation'), format('scripts/kibana-install.sh{0}', parameters('_artifactsLocationSasToken')))]",
      "[uri(parameters('_artifactsLocation'), format('scripts/logstash-install.sh{0}', parameters('_artifactsLocationSasToken')))]",
      "[uri(parameters('_artifactsLocation'), format('scripts/vm-disk-utils-0.1.sh{0}', parameters('_artifactsLocationSasToken')))]",
      "[uri(parameters('_artifactsLocation'), format('scripts/java-install.sh{0}', parameters('_artifactsLocationSasToken')))]"
    ],
    "ubuntuSettings": {
      "imageReference": {
        "publisher": "Canonical",
        "offer": "UbuntuServer",
        "sku": "16.04.0-LTS",
        "version": "latest"
      },
      "managementPort": 22,
      "extensionSettings": {
        "master": {
          "publisher": "Microsoft.Azure.Extensions",
          "type": "CustomScript",
          "typeHandlerVersion": "2.0",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": "[variables('ubuntuScripts')]"
          },
          "protectedSettings": {
            "commandToExecute": "[format('bash elasticsearch-install.sh -x{0}{1}', variables('commonShortOpts'), variables('commonInstallParams'))]"
          }
        },
        "client": {
          "publisher": "Microsoft.Azure.Extensions",
          "type": "CustomScript",
          "typeHandlerVersion": "2.0",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": "[variables('ubuntuScripts')]"
          },
          "protectedSettings": {
            "commandToExecute": "[format('bash elasticsearch-install.sh -y{0}{1}', variables('commonShortOpts'), variables('commonInstallParams'))]"
          }
        },
        "data": {
          "publisher": "Microsoft.Azure.Extensions",
          "type": "CustomScript",
          "typeHandlerVersion": "2.0",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": "[variables('ubuntuScripts')]"
          },
          "protectedSettings": {
            "commandToExecute": "[format('bash elasticsearch-install.sh -{0}{1}{2}', variables('dataNodeShortOpt'), variables('commonShortOpts'), variables('commonInstallParams'))]"
          }
        },
        "kibana": {
          "publisher": "Microsoft.Azure.Extensions",
          "type": "CustomScript",
          "typeHandlerVersion": "2.0",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": "[variables('ubuntuScripts')]"
          },
          "protectedSettings": {
            "commandToExecute": "[format('bash kibana-install.sh -{0}n {1}{2}{3} -v {4}{5}{6} -u {7}{8}{9} -S {10}{11}{12} -C {13}{14}{15} -K {16}{17}{18} -P {19}{20}{21} -Y {22}{23}{24} -H {25}{26}{27} -G {28}{29}{30} -V {31}{32}{33} -J {34}{35}{36} -U {37}{38}{39}', variables('installPluginsShortOpt'), variables('quote'), parameters('esSettings').clusterName, variables('quote'), variables('quote'), parameters('esSettings').version, variables('quote'), variables('quote'), variables('loadBalancerIp'), variables('quote'), variables('quote'), replace(parameters('esSettings').securityKibanaPwd, variables('quote'), variables('escapedQuote')), variables('quote'), variables('quote'), parameters('topologySettings').kibanaCertBlob, variables('quote'), variables('quote'), parameters('topologySettings').kibanaKeyBlob, variables('quote'), variables('quote'), replace(parameters('topologySettings').kibanaKeyPassphrase, variables('quote'), variables('escapedQuote')), variables('quote'), variables('quote'), replace(replace(parameters('topologySettings').kibanaYaml, variables('quote'), variables('escapedQuote')), format('{0}{1}', variables('backslash'), variables('doublequote')), variables('doublequote')), variables('quote'), variables('quote'), parameters('esSettings').httpCertBlob, variables('quote'), variables('quote'), replace(parameters('esSettings').httpCertPassword, variables('quote'), variables('escapedQuote')), variables('quote'), variables('quote'), parameters('esSettings').httpCaCertBlob, variables('quote'), variables('quote'), replace(parameters('esSettings').httpCaCertPassword, variables('quote'), variables('escapedQuote')), variables('quote'), variables('quote'), variables('kibanaDomainName'), variables('quote'))]"
          }
        },
        "logstash": {
          "publisher": "Microsoft.Azure.Extensions",
          "type": "CustomScript",
          "typeHandlerVersion": "2.0",
          "autoUpgradeMinorVersion": true,
          "settings": {
            "fileUris": "[variables('ubuntuScripts')]"
          },
          "protectedSettings": {
            "commandToExecute": "[format('bash logstash-install.sh -{0}v {1}{2}{3} -m {4} -u {5}{6}{7} -S {8}{9}{10} -L {11}{12}{13} -c {14}{15}{16} -K {17}{18}{19} -Y {20}{21}{22} -H {23}{24}{25} -G {26}{27}{28} -V {29}{30}{31} -J {32}{33}{34}', variables('installPluginsShortOpt'), variables('quote'), parameters('esSettings').version, variables('quote'), parameters('topologySettings').logstashHeapSize, variables('quote'), variables('loadBalancerIp'), variables('quote'), variables('quote'), replace(parameters('esSettings').securityLogstashPwd, variables('quote'), variables('escapedQuote')), variables('quote'), variables('quote'), parameters('topologySettings').logstashPlugins, variables('quote'), variables('quote'), parameters('topologySettings').logstashConf, variables('quote'), variables('quote'), replace(parameters('topologySettings').logstashKeystorePwd, variables('quote'), variables('escapedQuote')), variables('quote'), variables('quote'), replace(replace(parameters('topologySettings').logstashYaml, variables('quote'), variables('escapedQuote')), format('{0}{1}', variables('backslash'), variables('doublequote')), variables('doublequote')), variables('quote'), variables('quote'), parameters('esSettings').httpCertBlob, variables('quote'), variables('quote'), replace(parameters('esSettings').httpCertPassword, variables('quote'), variables('escapedQuote')), variables('quote'), variables('quote'), parameters('esSettings').httpCaCertBlob, variables('quote'), variables('quote'), replace(parameters('esSettings').httpCaCertPassword, variables('quote'), variables('escapedQuote')), variables('quote'))]"
          }
        }
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "elasticsearch-nodes",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "osSettings": {
            "value": "[variables('ubuntuSettings')]"
          },
          "commonVmSettings": {
            "value": "[parameters('commonVmSettings')]"
          },
          "topologySettings": {
            "value": "[parameters('topologySettings')]"
          },
          "networkSettings": {
            "value": "[parameters('networkSettings')]"
          },
          "elasticTags": {
            "value": "[parameters('elasticTags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "8542739184961947173"
            }
          },
          "parameters": {
            "osSettings": {
              "type": "object",
              "metadata": {
                "description": "Operating system settings"
              }
            },
            "commonVmSettings": {
              "type": "object",
              "metadata": {
                "description": "Shared VM settings"
              }
            },
            "topologySettings": {
              "type": "object",
              "metadata": {
                "description": "Aggregate for topology variable"
              }
            },
            "networkSettings": {
              "type": "object",
              "metadata": {
                "description": "Network settings"
              }
            },
            "elasticTags": {
              "type": "object",
              "defaultValue": {
                "provider": "648D2193-0CE0-4EFB-8A82-AF9792184FD9"
              },
              "metadata": {
                "description": "Unique identifiers to allow the Azure Infrastructure to understand the origin of resources deployed to Azure. You do not need to supply a value for this."
              }
            }
          },
          "variables": {
            "locations": {
              "eastus": {
                "platformFaultDomainCount": 3
              },
              "eastus2": {
                "platformFaultDomainCount": 3
              },
              "centralus": {
                "platformFaultDomainCount": 3
              },
              "northcentralus": {
                "platformFaultDomainCount": 3
              },
              "southcentralus": {
                "platformFaultDomainCount": 3
              },
              "westus": {
                "platformFaultDomainCount": 3
              },
              "canadacentral": {
                "platformFaultDomainCount": 3
              },
              "northeurope": {
                "platformFaultDomainCount": 3
              },
              "westeurope": {
                "platformFaultDomainCount": 3
              }
            },
            "normalizedLocation": "[replace(toLower(parameters('commonVmSettings').location), ' ', '')]",
            "platformFaultDomainCount": "[if(contains(variables('locations'), variables('normalizedLocation')), variables('locations')[variables('normalizedLocation')].platformFaultDomainCount, 2)]",
            "vmAcceleratedNetworking": [
              "Standard_D2_v2",
              "Standard_D3_v2",
              "Standard_D4_v2",
              "Standard_D5_v2",
              "Standard_D11_v2",
              "Standard_D12_v2",
              "Standard_D13_v2",
              "Standard_D14_v2",
              "Standard_D15_v2",
              "Standard_DS2_v2",
              "Standard_DS3_v2",
              "Standard_DS4_v2",
              "Standard_DS5_v2",
              "Standard_DS11_v2",
              "Standard_DS12_v2",
              "Standard_DS13_v2",
              "Standard_DS14_v2",
              "Standard_DS15_v2",
              "Standard_F2",
              "Standard_F4",
              "Standard_F8",
              "Standard_F16",
              "Standard_F2s",
              "Standard_F4s",
              "Standard_F8s",
              "Standard_F16s",
              "Standard_D4_v3",
              "Standard_D8_v3",
              "Standard_D16_v3",
              "Standard_D32_v3",
              "Standard_D64_v3",
              "Standard_D4s_v3",
              "Standard_D8s_v3",
              "Standard_D16s_v3",
              "Standard_D32s_v3",
              "Standard_D64s_v3",
              "Standard_E4_v3",
              "Standard_E8_v3",
              "Standard_E16_v3",
              "Standard_E32_v3",
              "Standard_E64_v3",
              "Standard_E64i_v3",
              "Standard_E4s_v3",
              "Standard_E8s_v3",
              "Standard_E16s_v3",
              "Standard_E32s_v3",
              "Standard_E64s_v3",
              "Standard_E64is_v3",
              "Standard_F4s_v2",
              "Standard_F8s_v2",
              "Standard_F16s_v2",
              "Standard_F32s_v2",
              "Standard_F64s_v2",
              "Standard_F72s_v2",
              "Standard_M8ms",
              "Standard_M16ms",
              "Standard_M32ts",
              "Standard_M32ls",
              "Standard_M32ms",
              "Standard_M64s",
              "Standard_M64ls",
              "Standard_M64ms",
              "Standard_M128s",
              "Standard_M128ms",
              "Standard_M64",
              "Standard_M64m",
              "Standard_M128",
              "Standard_M128m"
            ],
            "networkSecurityGroupName": "[format('{0}standard-lb-nsg', parameters('commonVmSettings').namespacePrefix)]",
            "standardInternalLoadBalancer": "[equals(parameters('networkSettings').internalSku, 'Standard')]",
            "standardExternalLoadBalancer": "[equals(parameters('networkSettings').externalSku, 'Standard')]",
            "standardInternalOrExternalLoadBalancer": "[or(variables('standardInternalLoadBalancer'), variables('standardExternalLoadBalancer'))]"
          },
          "resources": [
            {
              "condition": "[equals(parameters('topologySettings').dataNodesAreMasterEligible, 'No')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "master-nodes",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "vm": {
                    "value": {
                      "shared": "[parameters('commonVmSettings')]",
                      "namespace": "[format('{0}master-', parameters('commonVmSettings').namespacePrefix)]",
                      "installScript": "[parameters('osSettings').extensionSettings.master]",
                      "size": "[parameters('topologySettings').vmSizeMasterNodes]",
                      "storageAccountType": "Standard_LRS",
                      "count": 3,
                      "backendPools": [],
                      "imageReference": "[parameters('osSettings').imageReference]",
                      "platformFaultDomainCount": "[variables('platformFaultDomainCount')]",
                      "acceleratedNetworking": "[if(equals(parameters('topologySettings').vmMasterNodeAcceleratedNetworking, 'Default'), if(contains(variables('vmAcceleratedNetworking'), parameters('topologySettings').vmSizeMasterNodes), 'Yes', 'No'), parameters('topologySettings').vmMasterNodeAcceleratedNetworking)]",
                      "nsg": "",
                      "standardInternalLoadBalancer": false
                    }
                  },
                  "elasticTags": {
                    "value": "[parameters('elasticTags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "12350110167214581172"
                    }
                  },
                  "parameters": {
                    "vm": {
                      "type": "object",
                      "metadata": {
                        "description": "vm configuration"
                      }
                    },
                    "elasticTags": {
                      "type": "object",
                      "defaultValue": {
                        "provider": "648D2193-0CE0-4EFB-8A82-AF9792184FD9"
                      },
                      "metadata": {
                        "description": "Unique identifiers to allow the Azure Infrastructure to understand the origin of resources deployed to Azure. You do not need to supply a value for this."
                      }
                    }
                  },
                  "variables": {
                    "namespace": "[parameters('vm').namespace]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Compute/availabilitySets",
                      "apiVersion": "2019-03-01",
                      "name": "[format('{0}av-set', variables('namespace'))]",
                      "location": "[parameters('vm').shared.location]",
                      "tags": {
                        "provider": "[toUpper(parameters('elasticTags').provider)]"
                      },
                      "properties": {
                        "platformUpdateDomainCount": 3,
                        "platformFaultDomainCount": "[parameters('vm').platformFaultDomainCount]"
                      },
                      "sku": {
                        "name": "Aligned"
                      }
                    },
                    {
                      "copy": {
                        "name": "virtualMachine",
                        "count": "[length(range(0, parameters('vm').count))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}{1}-vm-creation', variables('namespace'), range(0, parameters('vm').count)[copyIndex()])]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "vm": {
                            "value": "[parameters('vm')]"
                          },
                          "availabilitySet": {
                            "value": "[format('{0}av-set', variables('namespace'))]"
                          },
                          "index": {
                            "value": "[range(0, parameters('vm').count)[copyIndex()]]"
                          },
                          "elasticTags": {
                            "value": "[parameters('elasticTags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "9194726631229920325"
                            }
                          },
                          "parameters": {
                            "vm": {
                              "type": "object",
                              "metadata": {
                                "description": "vm configuration"
                              }
                            },
                            "index": {
                              "type": "int",
                              "metadata": {
                                "description": "the outer loop index"
                              }
                            },
                            "availabilitySet": {
                              "type": "string",
                              "metadata": {
                                "description": "The name of the availability set"
                              }
                            },
                            "dataDisks": {
                              "type": "object",
                              "defaultValue": {
                                "disks": []
                              },
                              "metadata": {
                                "description": "additional data disks to attach"
                              }
                            },
                            "elasticTags": {
                              "type": "object",
                              "defaultValue": {
                                "provider": "648D2193-0CE0-4EFB-8A82-AF9792184FD9"
                              },
                              "metadata": {
                                "description": "Unique identifiers to allow the Azure Infrastructure to understand the origin of resources deployed to Azure. You do not need to supply a value for this."
                              }
                            }
                          },
                          "variables": {
                            "vmName": "[format('{0}{1}', parameters('vm').namespace, parameters('index'))]",
                            "password_osProfile": {
                              "computername": "[variables('vmName')]",
                              "adminUsername": "[parameters('vm').shared.credentials.adminUsername]",
                              "adminPassword": "[parameters('vm').shared.credentials.password]"
                            },
                            "sshPublicKey_osProfile": {
                              "computername": "[variables('vmName')]",
                              "adminUsername": "[parameters('vm').shared.credentials.adminUsername]",
                              "linuxConfiguration": {
                                "disablePasswordAuthentication": "true",
                                "ssh": {
                                  "publicKeys": [
                                    {
                                      "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('vm').shared.credentials.adminUsername)]",
                                      "keyData": "[parameters('vm').shared.credentials.sshPublicKey]"
                                    }
                                  ]
                                }
                              }
                            },
                            "publicIpName": "[format('{0}-ip', variables('vmName'))]",
                            "nsgIpConfigs": [
                              {},
                              {
                                "networkSecurityGroup": {
                                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('vm').nsg)]"
                                }
                              },
                              {
                                "networkSecurityGroup": {
                                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('vm').nsg)]"
                                },
                                "ipConfigurations": [
                                  {
                                    "name": "ipconfig1",
                                    "properties": {
                                      "primary": true,
                                      "privateIPAllocationMethod": "Dynamic",
                                      "subnet": {
                                        "id": "[parameters('vm').shared.subnetId]"
                                      },
                                      "loadBalancerBackendAddressPools": "[parameters('vm').backendPools]",
                                      "publicIPAddress": {
                                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
                                      }
                                    }
                                  }
                                ]
                              }
                            ],
                            "nsgIpConfig": "[variables('nsgIpConfigs')[if(empty(parameters('vm').nsg), 0, if(parameters('vm').standardInternalLoadBalancer, 2, 1))]]",
                            "nicProperties": {
                              "primary": true,
                              "enableAcceleratedNetworking": "[equals(parameters('vm').acceleratedNetworking, 'Yes')]",
                              "ipConfigurations": [
                                {
                                  "name": "ipconfig1",
                                  "properties": {
                                    "privateIPAllocationMethod": "Dynamic",
                                    "subnet": {
                                      "id": "[parameters('vm').shared.subnetId]"
                                    },
                                    "loadBalancerBackendAddressPools": "[parameters('vm').backendPools]"
                                  }
                                }
                              ]
                            }
                          },
                          "resources": [
                            {
                              "condition": "[and(not(empty(parameters('vm').nsg)), parameters('vm').standardInternalLoadBalancer)]",
                              "type": "Microsoft.Network/publicIPAddresses",
                              "apiVersion": "2019-04-01",
                              "name": "[variables('publicIpName')]",
                              "location": "[parameters('vm').shared.location]",
                              "sku": {
                                "name": "Standard"
                              },
                              "tags": {
                                "provider": "[toUpper(parameters('elasticTags').provider)]"
                              },
                              "properties": {
                                "publicIPAllocationMethod": "Static",
                                "dnsSettings": {
                                  "domainNameLabel": "[format('{0}{1}', variables('vmName'), uniqueString(resourceGroup().id, deployment().name))]"
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Network/networkInterfaces",
                              "apiVersion": "2019-04-01",
                              "name": "[format('{0}-nic', variables('vmName'))]",
                              "location": "[parameters('vm').shared.location]",
                              "tags": {
                                "provider": "[toUpper(parameters('elasticTags').provider)]"
                              },
                              "properties": "[union(variables('nicProperties'), variables('nsgIpConfig'))]",
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Compute/virtualMachines",
                              "apiVersion": "2019-03-01",
                              "name": "[variables('vmName')]",
                              "location": "[parameters('vm').shared.location]",
                              "tags": {
                                "provider": "[toUpper(parameters('elasticTags').provider)]"
                              },
                              "properties": {
                                "availabilitySet": {
                                  "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySet'))]"
                                },
                                "hardwareProfile": {
                                  "vmSize": "[parameters('vm').size]"
                                },
                                "osProfile": "[if(equals(parameters('vm').shared.credentials.authenticationType, 'password'), variables('password_osProfile'), variables('sshPublicKey_osProfile'))]",
                                "storageProfile": {
                                  "imageReference": "[parameters('vm').imageReference]",
                                  "osDisk": {
                                    "name": "[format('{0}-osdisk', variables('vmName'))]",
                                    "managedDisk": {
                                      "storageAccountType": "[parameters('vm').storageAccountType]"
                                    },
                                    "caching": "ReadWrite",
                                    "createOption": "FromImage"
                                  },
                                  "dataDisks": "[parameters('dataDisks').disks]"
                                },
                                "networkProfile": {
                                  "networkInterfaces": [
                                    {
                                      "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('vmName')))]"
                                    }
                                  ]
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('vmName')))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "apiVersion": "2019-03-01",
                              "name": "[format('{0}/script', variables('vmName'))]",
                              "location": "[parameters('vm').shared.location]",
                              "properties": "[parameters('vm').installScript]",
                              "dependsOn": [
                                "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
                              ]
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Compute/availabilitySets', format('{0}av-set', variables('namespace')))]"
                      ]
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "network-security-group",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "resourceGroupLocation": {
                    "value": "[parameters('commonVmSettings').location]"
                  },
                  "nsgName": {
                    "value": "[variables('networkSecurityGroupName')]"
                  },
                  "elasticTags": {
                    "value": "[parameters('elasticTags')]"
                  },
                  "standardInternalOrExternalLoadBalancer": {
                    "value": "[variables('standardInternalOrExternalLoadBalancer')]"
                  },
                  "standardExternalLoadBalancer": {
                    "value": "[variables('standardExternalLoadBalancer')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "6549720521694104035"
                    }
                  },
                  "parameters": {
                    "resourceGroupLocation": {
                      "type": "string"
                    },
                    "nsgName": {
                      "type": "string"
                    },
                    "elasticTags": {
                      "type": "object"
                    },
                    "standardInternalOrExternalLoadBalancer": {
                      "type": "bool"
                    },
                    "standardExternalLoadBalancer": {
                      "type": "bool"
                    }
                  },
                  "variables": {
                    "vmNsgProperties": [
                      {},
                      {
                        "securityRules": [
                          {
                            "name": "External",
                            "properties": {
                              "description": "Allows inbound traffic from Standard External LB",
                              "protocol": "Tcp",
                              "sourcePortRange": "*",
                              "destinationPortRange": "9201",
                              "sourceAddressPrefix": "*",
                              "destinationAddressPrefix": "*",
                              "access": "Allow",
                              "priority": 100,
                              "direction": "Inbound"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  "resources": [
                    {
                      "condition": "[parameters('standardInternalOrExternalLoadBalancer')]",
                      "type": "Microsoft.Network/networkSecurityGroups",
                      "apiVersion": "2019-04-01",
                      "name": "[parameters('nsgName')]",
                      "location": "[parameters('resourceGroupLocation')]",
                      "tags": {
                        "provider": "[toUpper(parameters('elasticTags').provider)]"
                      },
                      "properties": "[variables('vmNsgProperties')[if(parameters('standardExternalLoadBalancer'), 1, 0)]]"
                    }
                  ]
                }
              }
            },
            {
              "condition": "[greater(parameters('topologySettings').vmClientNodeCount, 0)]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "client-nodes",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "vm": {
                    "value": {
                      "shared": "[parameters('commonVmSettings')]",
                      "namespace": "[format('{0}client-', parameters('commonVmSettings').namespacePrefix)]",
                      "installScript": "[parameters('osSettings').extensionSettings.client]",
                      "size": "[parameters('topologySettings').vmSizeClientNodes]",
                      "count": "[parameters('topologySettings').vmClientNodeCount]",
                      "storageAccountType": "Standard_LRS",
                      "backendPools": "[parameters('topologySettings').loadBalancerBackEndPools]",
                      "imageReference": "[parameters('osSettings').imageReference]",
                      "platformFaultDomainCount": "[variables('platformFaultDomainCount')]",
                      "acceleratedNetworking": "[if(equals(parameters('topologySettings').vmClientNodeAcceleratedNetworking, 'Default'), if(contains(variables('vmAcceleratedNetworking'), parameters('topologySettings').vmSizeClientNodes), 'Yes', 'No'), parameters('topologySettings').vmClientNodeAcceleratedNetworking)]",
                      "nsg": "[if(variables('standardInternalOrExternalLoadBalancer'), variables('networkSecurityGroupName'), '')]",
                      "standardInternalLoadBalancer": "[variables('standardInternalLoadBalancer')]"
                    }
                  },
                  "elasticTags": {
                    "value": "[parameters('elasticTags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "12111328062697985937"
                    }
                  },
                  "parameters": {
                    "vm": {
                      "type": "object",
                      "metadata": {
                        "description": "vm configuration"
                      }
                    },
                    "elasticTags": {
                      "type": "object",
                      "defaultValue": {
                        "provider": "648D2193-0CE0-4EFB-8A82-AF9792184FD9"
                      },
                      "metadata": {
                        "description": "Unique identifiers to allow the Azure Infrastructure to understand the origin of resources deployed to Azure. You do not need to supply a value for this."
                      }
                    }
                  },
                  "variables": {
                    "namespace": "[parameters('vm').namespace]",
                    "availabilitySetName": "[format('{0}av-set', variables('namespace'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Compute/availabilitySets",
                      "apiVersion": "2019-03-01",
                      "name": "[variables('availabilitySetName')]",
                      "location": "[parameters('vm').shared.location]",
                      "tags": {
                        "provider": "[toUpper(parameters('elasticTags').provider)]"
                      },
                      "properties": {
                        "platformUpdateDomainCount": 20,
                        "platformFaultDomainCount": "[parameters('vm').platformFaultDomainCount]"
                      },
                      "sku": {
                        "name": "Aligned"
                      }
                    },
                    {
                      "copy": {
                        "name": "virtualMachine",
                        "count": "[length(range(0, parameters('vm').count))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}{1}-vm-creation', variables('namespace'), range(0, parameters('vm').count)[copyIndex()])]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "vm": {
                            "value": "[parameters('vm')]"
                          },
                          "availabilitySet": {
                            "value": "[variables('availabilitySetName')]"
                          },
                          "index": {
                            "value": "[range(0, parameters('vm').count)[copyIndex()]]"
                          },
                          "elasticTags": {
                            "value": "[parameters('elasticTags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "9194726631229920325"
                            }
                          },
                          "parameters": {
                            "vm": {
                              "type": "object",
                              "metadata": {
                                "description": "vm configuration"
                              }
                            },
                            "index": {
                              "type": "int",
                              "metadata": {
                                "description": "the outer loop index"
                              }
                            },
                            "availabilitySet": {
                              "type": "string",
                              "metadata": {
                                "description": "The name of the availability set"
                              }
                            },
                            "dataDisks": {
                              "type": "object",
                              "defaultValue": {
                                "disks": []
                              },
                              "metadata": {
                                "description": "additional data disks to attach"
                              }
                            },
                            "elasticTags": {
                              "type": "object",
                              "defaultValue": {
                                "provider": "648D2193-0CE0-4EFB-8A82-AF9792184FD9"
                              },
                              "metadata": {
                                "description": "Unique identifiers to allow the Azure Infrastructure to understand the origin of resources deployed to Azure. You do not need to supply a value for this."
                              }
                            }
                          },
                          "variables": {
                            "vmName": "[format('{0}{1}', parameters('vm').namespace, parameters('index'))]",
                            "password_osProfile": {
                              "computername": "[variables('vmName')]",
                              "adminUsername": "[parameters('vm').shared.credentials.adminUsername]",
                              "adminPassword": "[parameters('vm').shared.credentials.password]"
                            },
                            "sshPublicKey_osProfile": {
                              "computername": "[variables('vmName')]",
                              "adminUsername": "[parameters('vm').shared.credentials.adminUsername]",
                              "linuxConfiguration": {
                                "disablePasswordAuthentication": "true",
                                "ssh": {
                                  "publicKeys": [
                                    {
                                      "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('vm').shared.credentials.adminUsername)]",
                                      "keyData": "[parameters('vm').shared.credentials.sshPublicKey]"
                                    }
                                  ]
                                }
                              }
                            },
                            "publicIpName": "[format('{0}-ip', variables('vmName'))]",
                            "nsgIpConfigs": [
                              {},
                              {
                                "networkSecurityGroup": {
                                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('vm').nsg)]"
                                }
                              },
                              {
                                "networkSecurityGroup": {
                                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('vm').nsg)]"
                                },
                                "ipConfigurations": [
                                  {
                                    "name": "ipconfig1",
                                    "properties": {
                                      "primary": true,
                                      "privateIPAllocationMethod": "Dynamic",
                                      "subnet": {
                                        "id": "[parameters('vm').shared.subnetId]"
                                      },
                                      "loadBalancerBackendAddressPools": "[parameters('vm').backendPools]",
                                      "publicIPAddress": {
                                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
                                      }
                                    }
                                  }
                                ]
                              }
                            ],
                            "nsgIpConfig": "[variables('nsgIpConfigs')[if(empty(parameters('vm').nsg), 0, if(parameters('vm').standardInternalLoadBalancer, 2, 1))]]",
                            "nicProperties": {
                              "primary": true,
                              "enableAcceleratedNetworking": "[equals(parameters('vm').acceleratedNetworking, 'Yes')]",
                              "ipConfigurations": [
                                {
                                  "name": "ipconfig1",
                                  "properties": {
                                    "privateIPAllocationMethod": "Dynamic",
                                    "subnet": {
                                      "id": "[parameters('vm').shared.subnetId]"
                                    },
                                    "loadBalancerBackendAddressPools": "[parameters('vm').backendPools]"
                                  }
                                }
                              ]
                            }
                          },
                          "resources": [
                            {
                              "condition": "[and(not(empty(parameters('vm').nsg)), parameters('vm').standardInternalLoadBalancer)]",
                              "type": "Microsoft.Network/publicIPAddresses",
                              "apiVersion": "2019-04-01",
                              "name": "[variables('publicIpName')]",
                              "location": "[parameters('vm').shared.location]",
                              "sku": {
                                "name": "Standard"
                              },
                              "tags": {
                                "provider": "[toUpper(parameters('elasticTags').provider)]"
                              },
                              "properties": {
                                "publicIPAllocationMethod": "Static",
                                "dnsSettings": {
                                  "domainNameLabel": "[format('{0}{1}', variables('vmName'), uniqueString(resourceGroup().id, deployment().name))]"
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Network/networkInterfaces",
                              "apiVersion": "2019-04-01",
                              "name": "[format('{0}-nic', variables('vmName'))]",
                              "location": "[parameters('vm').shared.location]",
                              "tags": {
                                "provider": "[toUpper(parameters('elasticTags').provider)]"
                              },
                              "properties": "[union(variables('nicProperties'), variables('nsgIpConfig'))]",
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Compute/virtualMachines",
                              "apiVersion": "2019-03-01",
                              "name": "[variables('vmName')]",
                              "location": "[parameters('vm').shared.location]",
                              "tags": {
                                "provider": "[toUpper(parameters('elasticTags').provider)]"
                              },
                              "properties": {
                                "availabilitySet": {
                                  "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySet'))]"
                                },
                                "hardwareProfile": {
                                  "vmSize": "[parameters('vm').size]"
                                },
                                "osProfile": "[if(equals(parameters('vm').shared.credentials.authenticationType, 'password'), variables('password_osProfile'), variables('sshPublicKey_osProfile'))]",
                                "storageProfile": {
                                  "imageReference": "[parameters('vm').imageReference]",
                                  "osDisk": {
                                    "name": "[format('{0}-osdisk', variables('vmName'))]",
                                    "managedDisk": {
                                      "storageAccountType": "[parameters('vm').storageAccountType]"
                                    },
                                    "caching": "ReadWrite",
                                    "createOption": "FromImage"
                                  },
                                  "dataDisks": "[parameters('dataDisks').disks]"
                                },
                                "networkProfile": {
                                  "networkInterfaces": [
                                    {
                                      "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('vmName')))]"
                                    }
                                  ]
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('vmName')))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "apiVersion": "2019-03-01",
                              "name": "[format('{0}/script', variables('vmName'))]",
                              "location": "[parameters('vm').shared.location]",
                              "properties": "[parameters('vm').installScript]",
                              "dependsOn": [
                                "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
                              ]
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
                      ]
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "data-nodes",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "vm": {
                    "value": {
                      "shared": "[parameters('commonVmSettings')]",
                      "namespace": "[format('{0}data-', parameters('commonVmSettings').namespacePrefix)]",
                      "installScript": "[parameters('osSettings').extensionSettings.data]",
                      "size": "[parameters('topologySettings').vmSizeDataNodes]",
                      "storageAccountType": "[parameters('topologySettings').vmDataNodeStorageAccountType]",
                      "count": "[parameters('topologySettings').vmDataNodeCount]",
                      "backendPools": "[parameters('topologySettings').dataLoadBalancerBackEndPools]",
                      "imageReference": "[parameters('osSettings').imageReference]",
                      "platformFaultDomainCount": "[variables('platformFaultDomainCount')]",
                      "acceleratedNetworking": "[if(equals(parameters('topologySettings').vmDataNodeAcceleratedNetworking, 'Default'), if(contains(variables('vmAcceleratedNetworking'), parameters('topologySettings').vmSizeDataNodes), 'Yes', 'No'), parameters('topologySettings').vmDataNodeAcceleratedNetworking)]",
                      "nsg": "[if(and(variables('standardInternalOrExternalLoadBalancer'), equals(parameters('topologySettings').vmClientNodeCount, 0)), variables('networkSecurityGroupName'), '')]",
                      "standardInternalLoadBalancer": "[variables('standardInternalLoadBalancer')]"
                    }
                  },
                  "storageSettings": {
                    "value": "[parameters('topologySettings').dataNodeStorageSettings]"
                  },
                  "elasticTags": {
                    "value": "[parameters('elasticTags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "2896084932501386182"
                    }
                  },
                  "parameters": {
                    "vm": {
                      "type": "object",
                      "metadata": {
                        "description": "vm configuration"
                      }
                    },
                    "storageSettings": {
                      "type": "object",
                      "metadata": {
                        "description": "Storage Account Settings"
                      }
                    },
                    "elasticTags": {
                      "type": "object",
                      "defaultValue": {
                        "provider": "648D2193-0CE0-4EFB-8A82-AF9792184FD9"
                      },
                      "metadata": {
                        "description": "Unique identifiers to allow the Azure Infrastructure to understand the origin of resources deployed to Azure. You do not need to supply a value for this."
                      }
                    }
                  },
                  "variables": {
                    "namespace": "[parameters('vm').namespace]",
                    "avSetCount": "[add(div(sub(parameters('vm').count, 1), 100), 1)]",
                    "diskCount": "[if(greater(parameters('storageSettings').dataDisks, 0), parameters('storageSettings').dataDisks, 1)]"
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "availabilitySets",
                        "count": "[length(range(0, variables('avSetCount')))]"
                      },
                      "type": "Microsoft.Compute/availabilitySets",
                      "apiVersion": "2019-03-01",
                      "name": "[format('{0}{1}-av-set', variables('namespace'), range(0, variables('avSetCount'))[copyIndex()])]",
                      "location": "[parameters('vm').shared.location]",
                      "tags": {
                        "provider": "[toUpper(parameters('elasticTags').provider)]"
                      },
                      "properties": {
                        "platformUpdateDomainCount": 20,
                        "platformFaultDomainCount": "[parameters('vm').platformFaultDomainCount]"
                      },
                      "sku": {
                        "name": "Aligned"
                      }
                    },
                    {
                      "condition": "[greater(variables('diskCount'), 0)]",
                      "copy": {
                        "name": "virtualMachinesWithDisks",
                        "count": "[length(range(0, parameters('vm').count))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}{1}-vm-creation', variables('namespace'), range(0, parameters('vm').count)[copyIndex()])]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "vm": {
                            "value": "[parameters('vm')]"
                          },
                          "index": {
                            "value": "[range(0, parameters('vm').count)[copyIndex()]]"
                          },
                          "availabilitySet": {
                            "value": "[format('{0}{1}-av-set', variables('namespace'), mod(range(0, parameters('vm').count)[copyIndex()], variables('avSetCount')))]"
                          },
                          "dataDisks": {
                            "value": {
                              "copy": [
                                {
                                  "name": "disks",
                                  "count": "[length(range(0, variables('diskCount')))]",
                                  "input": {
                                    "name": "[format('{0}{1}-datadisk{2}', variables('namespace'), range(0, parameters('vm').count)[copyIndex()], add(range(0, variables('diskCount'))[copyIndex('disks')], 1))]",
                                    "diskSizeGB": "[parameters('storageSettings').diskSize]",
                                    "lun": "[range(0, variables('diskCount'))[copyIndex('disks')]]",
                                    "managedDisk": {
                                      "storageAccountType": "[parameters('storageSettings').accountType]"
                                    },
                                    "caching": "None",
                                    "createOption": "Empty"
                                  }
                                }
                              ]
                            }
                          },
                          "elasticTags": {
                            "value": "[parameters('elasticTags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "9194726631229920325"
                            }
                          },
                          "parameters": {
                            "vm": {
                              "type": "object",
                              "metadata": {
                                "description": "vm configuration"
                              }
                            },
                            "index": {
                              "type": "int",
                              "metadata": {
                                "description": "the outer loop index"
                              }
                            },
                            "availabilitySet": {
                              "type": "string",
                              "metadata": {
                                "description": "The name of the availability set"
                              }
                            },
                            "dataDisks": {
                              "type": "object",
                              "defaultValue": {
                                "disks": []
                              },
                              "metadata": {
                                "description": "additional data disks to attach"
                              }
                            },
                            "elasticTags": {
                              "type": "object",
                              "defaultValue": {
                                "provider": "648D2193-0CE0-4EFB-8A82-AF9792184FD9"
                              },
                              "metadata": {
                                "description": "Unique identifiers to allow the Azure Infrastructure to understand the origin of resources deployed to Azure. You do not need to supply a value for this."
                              }
                            }
                          },
                          "variables": {
                            "vmName": "[format('{0}{1}', parameters('vm').namespace, parameters('index'))]",
                            "password_osProfile": {
                              "computername": "[variables('vmName')]",
                              "adminUsername": "[parameters('vm').shared.credentials.adminUsername]",
                              "adminPassword": "[parameters('vm').shared.credentials.password]"
                            },
                            "sshPublicKey_osProfile": {
                              "computername": "[variables('vmName')]",
                              "adminUsername": "[parameters('vm').shared.credentials.adminUsername]",
                              "linuxConfiguration": {
                                "disablePasswordAuthentication": "true",
                                "ssh": {
                                  "publicKeys": [
                                    {
                                      "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('vm').shared.credentials.adminUsername)]",
                                      "keyData": "[parameters('vm').shared.credentials.sshPublicKey]"
                                    }
                                  ]
                                }
                              }
                            },
                            "publicIpName": "[format('{0}-ip', variables('vmName'))]",
                            "nsgIpConfigs": [
                              {},
                              {
                                "networkSecurityGroup": {
                                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('vm').nsg)]"
                                }
                              },
                              {
                                "networkSecurityGroup": {
                                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('vm').nsg)]"
                                },
                                "ipConfigurations": [
                                  {
                                    "name": "ipconfig1",
                                    "properties": {
                                      "primary": true,
                                      "privateIPAllocationMethod": "Dynamic",
                                      "subnet": {
                                        "id": "[parameters('vm').shared.subnetId]"
                                      },
                                      "loadBalancerBackendAddressPools": "[parameters('vm').backendPools]",
                                      "publicIPAddress": {
                                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
                                      }
                                    }
                                  }
                                ]
                              }
                            ],
                            "nsgIpConfig": "[variables('nsgIpConfigs')[if(empty(parameters('vm').nsg), 0, if(parameters('vm').standardInternalLoadBalancer, 2, 1))]]",
                            "nicProperties": {
                              "primary": true,
                              "enableAcceleratedNetworking": "[equals(parameters('vm').acceleratedNetworking, 'Yes')]",
                              "ipConfigurations": [
                                {
                                  "name": "ipconfig1",
                                  "properties": {
                                    "privateIPAllocationMethod": "Dynamic",
                                    "subnet": {
                                      "id": "[parameters('vm').shared.subnetId]"
                                    },
                                    "loadBalancerBackendAddressPools": "[parameters('vm').backendPools]"
                                  }
                                }
                              ]
                            }
                          },
                          "resources": [
                            {
                              "condition": "[and(not(empty(parameters('vm').nsg)), parameters('vm').standardInternalLoadBalancer)]",
                              "type": "Microsoft.Network/publicIPAddresses",
                              "apiVersion": "2019-04-01",
                              "name": "[variables('publicIpName')]",
                              "location": "[parameters('vm').shared.location]",
                              "sku": {
                                "name": "Standard"
                              },
                              "tags": {
                                "provider": "[toUpper(parameters('elasticTags').provider)]"
                              },
                              "properties": {
                                "publicIPAllocationMethod": "Static",
                                "dnsSettings": {
                                  "domainNameLabel": "[format('{0}{1}', variables('vmName'), uniqueString(resourceGroup().id, deployment().name))]"
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Network/networkInterfaces",
                              "apiVersion": "2019-04-01",
                              "name": "[format('{0}-nic', variables('vmName'))]",
                              "location": "[parameters('vm').shared.location]",
                              "tags": {
                                "provider": "[toUpper(parameters('elasticTags').provider)]"
                              },
                              "properties": "[union(variables('nicProperties'), variables('nsgIpConfig'))]",
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Compute/virtualMachines",
                              "apiVersion": "2019-03-01",
                              "name": "[variables('vmName')]",
                              "location": "[parameters('vm').shared.location]",
                              "tags": {
                                "provider": "[toUpper(parameters('elasticTags').provider)]"
                              },
                              "properties": {
                                "availabilitySet": {
                                  "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySet'))]"
                                },
                                "hardwareProfile": {
                                  "vmSize": "[parameters('vm').size]"
                                },
                                "osProfile": "[if(equals(parameters('vm').shared.credentials.authenticationType, 'password'), variables('password_osProfile'), variables('sshPublicKey_osProfile'))]",
                                "storageProfile": {
                                  "imageReference": "[parameters('vm').imageReference]",
                                  "osDisk": {
                                    "name": "[format('{0}-osdisk', variables('vmName'))]",
                                    "managedDisk": {
                                      "storageAccountType": "[parameters('vm').storageAccountType]"
                                    },
                                    "caching": "ReadWrite",
                                    "createOption": "FromImage"
                                  },
                                  "dataDisks": "[parameters('dataDisks').disks]"
                                },
                                "networkProfile": {
                                  "networkInterfaces": [
                                    {
                                      "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('vmName')))]"
                                    }
                                  ]
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('vmName')))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "apiVersion": "2019-03-01",
                              "name": "[format('{0}/script', variables('vmName'))]",
                              "location": "[parameters('vm').shared.location]",
                              "properties": "[parameters('vm').installScript]",
                              "dependsOn": [
                                "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
                              ]
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "availabilitySets"
                      ]
                    },
                    {
                      "condition": "[equals(variables('diskCount'), 0)]",
                      "copy": {
                        "name": "virtualMachinesWithoutDisks",
                        "count": "[length(range(0, parameters('vm').count))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}{1}-vm-nodisks-creation', variables('namespace'), range(0, parameters('vm').count)[copyIndex()])]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "vm": {
                            "value": "[parameters('vm')]"
                          },
                          "index": {
                            "value": "[range(0, parameters('vm').count)[copyIndex()]]"
                          },
                          "availabilitySet": {
                            "value": "[format('{0}{1}-av-set', variables('namespace'), mod(range(0, parameters('vm').count)[copyIndex()], variables('avSetCount')))]"
                          },
                          "elasticTags": {
                            "value": "[parameters('elasticTags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "9194726631229920325"
                            }
                          },
                          "parameters": {
                            "vm": {
                              "type": "object",
                              "metadata": {
                                "description": "vm configuration"
                              }
                            },
                            "index": {
                              "type": "int",
                              "metadata": {
                                "description": "the outer loop index"
                              }
                            },
                            "availabilitySet": {
                              "type": "string",
                              "metadata": {
                                "description": "The name of the availability set"
                              }
                            },
                            "dataDisks": {
                              "type": "object",
                              "defaultValue": {
                                "disks": []
                              },
                              "metadata": {
                                "description": "additional data disks to attach"
                              }
                            },
                            "elasticTags": {
                              "type": "object",
                              "defaultValue": {
                                "provider": "648D2193-0CE0-4EFB-8A82-AF9792184FD9"
                              },
                              "metadata": {
                                "description": "Unique identifiers to allow the Azure Infrastructure to understand the origin of resources deployed to Azure. You do not need to supply a value for this."
                              }
                            }
                          },
                          "variables": {
                            "vmName": "[format('{0}{1}', parameters('vm').namespace, parameters('index'))]",
                            "password_osProfile": {
                              "computername": "[variables('vmName')]",
                              "adminUsername": "[parameters('vm').shared.credentials.adminUsername]",
                              "adminPassword": "[parameters('vm').shared.credentials.password]"
                            },
                            "sshPublicKey_osProfile": {
                              "computername": "[variables('vmName')]",
                              "adminUsername": "[parameters('vm').shared.credentials.adminUsername]",
                              "linuxConfiguration": {
                                "disablePasswordAuthentication": "true",
                                "ssh": {
                                  "publicKeys": [
                                    {
                                      "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('vm').shared.credentials.adminUsername)]",
                                      "keyData": "[parameters('vm').shared.credentials.sshPublicKey]"
                                    }
                                  ]
                                }
                              }
                            },
                            "publicIpName": "[format('{0}-ip', variables('vmName'))]",
                            "nsgIpConfigs": [
                              {},
                              {
                                "networkSecurityGroup": {
                                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('vm').nsg)]"
                                }
                              },
                              {
                                "networkSecurityGroup": {
                                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('vm').nsg)]"
                                },
                                "ipConfigurations": [
                                  {
                                    "name": "ipconfig1",
                                    "properties": {
                                      "primary": true,
                                      "privateIPAllocationMethod": "Dynamic",
                                      "subnet": {
                                        "id": "[parameters('vm').shared.subnetId]"
                                      },
                                      "loadBalancerBackendAddressPools": "[parameters('vm').backendPools]",
                                      "publicIPAddress": {
                                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
                                      }
                                    }
                                  }
                                ]
                              }
                            ],
                            "nsgIpConfig": "[variables('nsgIpConfigs')[if(empty(parameters('vm').nsg), 0, if(parameters('vm').standardInternalLoadBalancer, 2, 1))]]",
                            "nicProperties": {
                              "primary": true,
                              "enableAcceleratedNetworking": "[equals(parameters('vm').acceleratedNetworking, 'Yes')]",
                              "ipConfigurations": [
                                {
                                  "name": "ipconfig1",
                                  "properties": {
                                    "privateIPAllocationMethod": "Dynamic",
                                    "subnet": {
                                      "id": "[parameters('vm').shared.subnetId]"
                                    },
                                    "loadBalancerBackendAddressPools": "[parameters('vm').backendPools]"
                                  }
                                }
                              ]
                            }
                          },
                          "resources": [
                            {
                              "condition": "[and(not(empty(parameters('vm').nsg)), parameters('vm').standardInternalLoadBalancer)]",
                              "type": "Microsoft.Network/publicIPAddresses",
                              "apiVersion": "2019-04-01",
                              "name": "[variables('publicIpName')]",
                              "location": "[parameters('vm').shared.location]",
                              "sku": {
                                "name": "Standard"
                              },
                              "tags": {
                                "provider": "[toUpper(parameters('elasticTags').provider)]"
                              },
                              "properties": {
                                "publicIPAllocationMethod": "Static",
                                "dnsSettings": {
                                  "domainNameLabel": "[format('{0}{1}', variables('vmName'), uniqueString(resourceGroup().id, deployment().name))]"
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Network/networkInterfaces",
                              "apiVersion": "2019-04-01",
                              "name": "[format('{0}-nic', variables('vmName'))]",
                              "location": "[parameters('vm').shared.location]",
                              "tags": {
                                "provider": "[toUpper(parameters('elasticTags').provider)]"
                              },
                              "properties": "[union(variables('nicProperties'), variables('nsgIpConfig'))]",
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Compute/virtualMachines",
                              "apiVersion": "2019-03-01",
                              "name": "[variables('vmName')]",
                              "location": "[parameters('vm').shared.location]",
                              "tags": {
                                "provider": "[toUpper(parameters('elasticTags').provider)]"
                              },
                              "properties": {
                                "availabilitySet": {
                                  "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySet'))]"
                                },
                                "hardwareProfile": {
                                  "vmSize": "[parameters('vm').size]"
                                },
                                "osProfile": "[if(equals(parameters('vm').shared.credentials.authenticationType, 'password'), variables('password_osProfile'), variables('sshPublicKey_osProfile'))]",
                                "storageProfile": {
                                  "imageReference": "[parameters('vm').imageReference]",
                                  "osDisk": {
                                    "name": "[format('{0}-osdisk', variables('vmName'))]",
                                    "managedDisk": {
                                      "storageAccountType": "[parameters('vm').storageAccountType]"
                                    },
                                    "caching": "ReadWrite",
                                    "createOption": "FromImage"
                                  },
                                  "dataDisks": "[parameters('dataDisks').disks]"
                                },
                                "networkProfile": {
                                  "networkInterfaces": [
                                    {
                                      "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('vmName')))]"
                                    }
                                  ]
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('vmName')))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "apiVersion": "2019-03-01",
                              "name": "[format('{0}/script', variables('vmName'))]",
                              "location": "[parameters('vm').shared.location]",
                              "properties": "[parameters('vm').installScript]",
                              "dependsOn": [
                                "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
                              ]
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "availabilitySets"
                      ]
                    }
                  ]
                }
              }
            },
            {
              "condition": "[equals(toLower(parameters('topologySettings').jumpbox), 'yes')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "jumpbox",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "credentials": {
                    "value": "[parameters('commonVmSettings').credentials]"
                  },
                  "location": {
                    "value": "[parameters('commonVmSettings').location]"
                  },
                  "vmName": {
                    "value": "[format('{0}jumpbox', parameters('commonVmSettings').namespacePrefix)]"
                  },
                  "networkSettings": {
                    "value": "[parameters('networkSettings')]"
                  },
                  "osSettings": {
                    "value": "[parameters('osSettings')]"
                  },
                  "elasticTags": {
                    "value": "[parameters('elasticTags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "7272365375184994060"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Location where resources will be provisioned"
                      }
                    },
                    "vmName": {
                      "type": "string",
                      "metadata": {
                        "description": "The unique namespace for jumpbox nodes"
                      }
                    },
                    "networkSettings": {
                      "type": "object",
                      "metadata": {
                        "description": "Network settings"
                      }
                    },
                    "credentials": {
                      "type": "secureObject",
                      "metadata": {
                        "description": "Credential information block"
                      }
                    },
                    "osSettings": {
                      "type": "object",
                      "metadata": {
                        "description": "Elasticsearch deployment platform settings"
                      }
                    },
                    "elasticTags": {
                      "type": "object",
                      "defaultValue": {
                        "provider": "648D2193-0CE0-4EFB-8A82-AF9792184FD9"
                      },
                      "metadata": {
                        "description": "Unique identifiers to allow the Azure Infrastructure to understand the origin of resources deployed to Azure. You do not need to supply a value for this."
                      }
                    }
                  },
                  "variables": {
                    "vmSize": "Standard_A0",
                    "subnetId": "[resourceId(parameters('networkSettings').resourceGroup, 'Microsoft.Network/virtualNetworks/subnets', parameters('networkSettings').name, parameters('networkSettings').subnet.name)]",
                    "publicIpName": "[format('{0}-ip', parameters('vmName'))]",
                    "securityGroupName": "[format('{0}-nsg', parameters('vmName'))]",
                    "vmNetworkInterfaceName": "[format('{0}-nic', parameters('vmName'))]",
                    "password_osProfile": {
                      "computername": "[parameters('vmName')]",
                      "adminUsername": "[parameters('credentials').adminUsername]",
                      "adminPassword": "[parameters('credentials').password]"
                    },
                    "sshPublicKey_osProfile": {
                      "computername": "[parameters('vmName')]",
                      "adminUsername": "[parameters('credentials').adminUsername]",
                      "linuxConfiguration": {
                        "disablePasswordAuthentication": "true",
                        "ssh": {
                          "publicKeys": [
                            {
                              "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('credentials').adminUsername)]",
                              "keyData": "[parameters('credentials').sshPublicKey]"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/networkSecurityGroups",
                      "apiVersion": "2019-04-01",
                      "name": "[variables('securityGroupName')]",
                      "location": "[parameters('location')]",
                      "tags": {
                        "provider": "[toUpper(parameters('elasticTags').provider)]"
                      },
                      "properties": {
                        "securityRules": [
                          {
                            "name": "SSH",
                            "properties": {
                              "description": "Allows SSH traffic",
                              "protocol": "Tcp",
                              "sourcePortRange": "*",
                              "destinationPortRange": "[parameters('osSettings').managementPort]",
                              "sourceAddressPrefix": "*",
                              "destinationAddressPrefix": "*",
                              "access": "Allow",
                              "priority": 100,
                              "direction": "Inbound"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2019-04-01",
                      "name": "[variables('publicIpName')]",
                      "location": "[parameters('location')]",
                      "tags": {
                        "provider": "[toUpper(parameters('elasticTags').provider)]"
                      },
                      "properties": {
                        "publicIPAllocationMethod": "Dynamic",
                        "dnsSettings": {
                          "domainNameLabel": "[format('jump-{0}', uniqueString(resourceGroup().id, deployment().name))]"
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2019-04-01",
                      "name": "[variables('vmNetworkInterfaceName')]",
                      "location": "[parameters('location')]",
                      "tags": {
                        "provider": "[toUpper(parameters('elasticTags').provider)]"
                      },
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig1",
                            "properties": {
                              "privateIPAllocationMethod": "Dynamic",
                              "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
                              },
                              "subnet": {
                                "id": "[variables('subnetId')]"
                              }
                            }
                          }
                        ],
                        "networkSecurityGroup": {
                          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('securityGroupName'))]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]",
                        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('securityGroupName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Compute/virtualMachines",
                      "apiVersion": "2019-03-01",
                      "name": "[parameters('vmName')]",
                      "location": "[parameters('location')]",
                      "tags": {
                        "provider": "[toUpper(parameters('elasticTags').provider)]"
                      },
                      "properties": {
                        "hardwareProfile": {
                          "vmSize": "[variables('vmSize')]"
                        },
                        "osProfile": "[if(equals(parameters('credentials').authenticationType, 'password'), variables('password_osProfile'), variables('sshPublicKey_osProfile'))]",
                        "storageProfile": {
                          "imageReference": "[parameters('osSettings').imageReference]",
                          "osDisk": {
                            "name": "[format('{0}-osdisk', parameters('vmName'))]",
                            "managedDisk": {
                              "storageAccountType": "Standard_LRS"
                            },
                            "caching": "ReadWrite",
                            "createOption": "FromImage"
                          }
                        },
                        "networkProfile": {
                          "networkInterfaces": [
                            {
                              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vmNetworkInterfaceName'))]"
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/networkInterfaces', variables('vmNetworkInterfaceName'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "fqdn": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))).dnsSettings.fqdn]"
                    }
                  }
                }
              }
            },
            {
              "condition": "[equals(parameters('topologySettings').kibana, 'Yes')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "kibana",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "credentials": {
                    "value": "[parameters('commonVmSettings').credentials]"
                  },
                  "location": {
                    "value": "[parameters('commonVmSettings').location]"
                  },
                  "vmName": {
                    "value": "[format('{0}kibana', parameters('commonVmSettings').namespacePrefix)]"
                  },
                  "networkSettings": {
                    "value": "[parameters('networkSettings')]"
                  },
                  "osSettings": {
                    "value": "[parameters('osSettings')]"
                  },
                  "vmSize": {
                    "value": "[parameters('topologySettings').vmSizeKibana]"
                  },
                  "acceleratedNetworking": {
                    "value": "[if(equals(parameters('topologySettings').vmKibanaAcceleratedNetworking, 'Default'), if(contains(variables('vmAcceleratedNetworking'), parameters('topologySettings').vmSizeKibana), 'Yes', 'No'), parameters('topologySettings').vmKibanaAcceleratedNetworking)]"
                  },
                  "elasticTags": {
                    "value": "[parameters('elasticTags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "18390787985649623517"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Location where resources will be provisioned"
                      }
                    },
                    "vmName": {
                      "type": "string",
                      "metadata": {
                        "description": "The unique namespace for the Kibana VM"
                      }
                    },
                    "networkSettings": {
                      "type": "object",
                      "metadata": {
                        "description": "Network settings"
                      }
                    },
                    "credentials": {
                      "type": "secureObject",
                      "metadata": {
                        "description": "Credentials information block"
                      }
                    },
                    "osSettings": {
                      "type": "object",
                      "metadata": {
                        "description": "Platform and OS settings"
                      }
                    },
                    "vmSize": {
                      "type": "string",
                      "defaultValue": "Standard_A1",
                      "metadata": {
                        "description": "Size of the Kibana VM"
                      }
                    },
                    "acceleratedNetworking": {
                      "type": "string",
                      "defaultValue": "No",
                      "allowedValues": [
                        "Yes",
                        "No"
                      ],
                      "metadata": {
                        "description": "Whether to enable accelerated networking for Kibana, which enables single root I/O virtualization (SR-IOV) to a VM, greatly improving its networking performance. Valid only for specific VM SKUs"
                      }
                    },
                    "elasticTags": {
                      "type": "object",
                      "defaultValue": {
                        "provider": "648D2193-0CE0-4EFB-8A82-AF9792184FD9"
                      },
                      "metadata": {
                        "description": "Unique identifiers to allow the Azure Infrastructure to understand the origin of resources deployed to Azure. You do not need to supply a value for this."
                      }
                    }
                  },
                  "variables": {
                    "subnetId": "[resourceId(parameters('networkSettings').resourceGroup, 'Microsoft.Network/virtualNetworks/subnets', parameters('networkSettings').name, parameters('networkSettings').subnet.name)]",
                    "publicIpName": "[format('{0}-ip', parameters('vmName'))]",
                    "securityGroupName": "[format('{0}-nsg', parameters('vmName'))]",
                    "networkInterfaceName": "[format('{0}-nic', parameters('vmName'))]",
                    "password_osProfile": {
                      "computername": "[parameters('vmName')]",
                      "adminUsername": "[parameters('credentials').adminUsername]",
                      "adminPassword": "[parameters('credentials').password]"
                    },
                    "sshPublicKey_osProfile": {
                      "computername": "[parameters('vmName')]",
                      "adminUsername": "[parameters('credentials').adminUsername]",
                      "linuxConfiguration": {
                        "disablePasswordAuthentication": "true",
                        "ssh": {
                          "publicKeys": [
                            {
                              "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('credentials').adminUsername)]",
                              "keyData": "[parameters('credentials').sshPublicKey]"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/networkSecurityGroups",
                      "apiVersion": "2019-04-01",
                      "name": "[variables('securityGroupName')]",
                      "location": "[parameters('location')]",
                      "tags": {
                        "provider": "[toUpper(parameters('elasticTags').provider)]"
                      },
                      "properties": {
                        "securityRules": [
                          {
                            "name": "SSH",
                            "properties": {
                              "description": "Allows inbound SSH traffic from anyone",
                              "protocol": "Tcp",
                              "sourcePortRange": "*",
                              "destinationPortRange": "[parameters('osSettings').managementPort]",
                              "sourceAddressPrefix": "*",
                              "destinationAddressPrefix": "*",
                              "access": "Allow",
                              "priority": 100,
                              "direction": "Inbound"
                            }
                          },
                          {
                            "name": "Kibana",
                            "properties": {
                              "description": "Allows inbound Kibana traffic from anyone",
                              "protocol": "Tcp",
                              "sourcePortRange": "*",
                              "destinationPortRange": "5601",
                              "sourceAddressPrefix": "*",
                              "destinationAddressPrefix": "*",
                              "access": "Allow",
                              "priority": 200,
                              "direction": "Inbound"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2019-04-01",
                      "name": "[variables('networkInterfaceName')]",
                      "location": "[parameters('location')]",
                      "tags": {
                        "provider": "[toUpper(parameters('elasticTags').provider)]"
                      },
                      "properties": {
                        "primary": true,
                        "enableAcceleratedNetworking": "[equals(parameters('acceleratedNetworking'), 'Yes')]",
                        "ipConfigurations": [
                          {
                            "name": "ipconfig1",
                            "properties": {
                              "privateIPAllocationMethod": "Dynamic",
                              "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
                              },
                              "subnet": {
                                "id": "[variables('subnetId')]"
                              }
                            }
                          }
                        ],
                        "networkSecurityGroup": {
                          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('securityGroupName'))]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('securityGroupName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Compute/virtualMachines",
                      "apiVersion": "2019-03-01",
                      "name": "[parameters('vmName')]",
                      "location": "[parameters('location')]",
                      "tags": {
                        "provider": "[toUpper(parameters('elasticTags').provider)]"
                      },
                      "properties": {
                        "hardwareProfile": {
                          "vmSize": "[parameters('vmSize')]"
                        },
                        "osProfile": "[if(equals(parameters('credentials').authenticationType, 'password'), variables('password_osProfile'), variables('sshPublicKey_osProfile'))]",
                        "storageProfile": {
                          "imageReference": "[parameters('osSettings').imageReference]",
                          "osDisk": {
                            "name": "[format('{0}-osdisk', parameters('vmName'))]",
                            "managedDisk": {
                              "storageAccountType": "Standard_LRS"
                            },
                            "caching": "ReadWrite",
                            "createOption": "FromImage"
                          }
                        },
                        "networkProfile": {
                          "networkInterfaces": [
                            {
                              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "apiVersion": "2019-03-01",
                      "name": "[format('{0}/script', parameters('vmName'))]",
                      "location": "[parameters('location')]",
                      "properties": "[parameters('osSettings').extensionSettings.kibana]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
                      ]
                    }
                  ]
                }
              }
            },
            {
              "condition": "[equals(parameters('topologySettings').logstash, 'Yes')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "logstash",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "vm": {
                    "value": {
                      "shared": "[parameters('commonVmSettings')]",
                      "namespace": "[format('{0}logstash-', parameters('commonVmSettings').namespacePrefix)]",
                      "installScript": "[parameters('osSettings').extensionSettings.logstash]",
                      "size": "[parameters('topologySettings').vmSizeLogstash]",
                      "storageAccountType": "Standard_LRS",
                      "count": "[parameters('topologySettings').vmLogstashCount]",
                      "backendPools": [],
                      "imageReference": "[parameters('osSettings').imageReference]",
                      "platformFaultDomainCount": "[variables('platformFaultDomainCount')]",
                      "acceleratedNetworking": "[if(equals(parameters('topologySettings').vmLogstashAcceleratedNetworking, 'Default'), if(contains(variables('vmAcceleratedNetworking'), parameters('topologySettings').vmSizeLogstash), 'Yes', 'No'), parameters('topologySettings').vmLogstashAcceleratedNetworking)]",
                      "nsg": "",
                      "standardInternalLoadBalancer": false
                    }
                  },
                  "elasticTags": {
                    "value": "[parameters('elasticTags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "957160880857125983"
                    }
                  },
                  "parameters": {
                    "vm": {
                      "type": "object",
                      "metadata": {
                        "description": "vm configuration"
                      }
                    },
                    "elasticTags": {
                      "type": "object",
                      "defaultValue": {
                        "provider": "648D2193-0CE0-4EFB-8A82-AF9792184FD9"
                      },
                      "metadata": {
                        "description": "Unique identifiers to allow the Azure Infrastructure to understand the origin of resources deployed to Azure. You do not need to supply a value for this."
                      }
                    }
                  },
                  "variables": {
                    "namespace": "[parameters('vm').namespace]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Compute/availabilitySets",
                      "apiVersion": "2019-03-01",
                      "name": "[format('{0}av-set', variables('namespace'))]",
                      "location": "[parameters('vm').shared.location]",
                      "tags": {
                        "provider": "[toUpper(parameters('elasticTags').provider)]"
                      },
                      "properties": {
                        "platformUpdateDomainCount": 20,
                        "platformFaultDomainCount": "[parameters('vm').platformFaultDomainCount]"
                      },
                      "sku": {
                        "name": "Aligned"
                      }
                    },
                    {
                      "copy": {
                        "name": "virtualMachine",
                        "count": "[length(range(0, parameters('vm').count))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}{1}-vm-creation', variables('namespace'), range(0, parameters('vm').count)[copyIndex()])]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "vm": {
                            "value": "[parameters('vm')]"
                          },
                          "availabilitySet": {
                            "value": "[format('{0}av-set', variables('namespace'))]"
                          },
                          "index": {
                            "value": "[range(0, parameters('vm').count)[copyIndex()]]"
                          },
                          "elasticTags": {
                            "value": "[parameters('elasticTags')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.1272.37030",
                              "templateHash": "9194726631229920325"
                            }
                          },
                          "parameters": {
                            "vm": {
                              "type": "object",
                              "metadata": {
                                "description": "vm configuration"
                              }
                            },
                            "index": {
                              "type": "int",
                              "metadata": {
                                "description": "the outer loop index"
                              }
                            },
                            "availabilitySet": {
                              "type": "string",
                              "metadata": {
                                "description": "The name of the availability set"
                              }
                            },
                            "dataDisks": {
                              "type": "object",
                              "defaultValue": {
                                "disks": []
                              },
                              "metadata": {
                                "description": "additional data disks to attach"
                              }
                            },
                            "elasticTags": {
                              "type": "object",
                              "defaultValue": {
                                "provider": "648D2193-0CE0-4EFB-8A82-AF9792184FD9"
                              },
                              "metadata": {
                                "description": "Unique identifiers to allow the Azure Infrastructure to understand the origin of resources deployed to Azure. You do not need to supply a value for this."
                              }
                            }
                          },
                          "variables": {
                            "vmName": "[format('{0}{1}', parameters('vm').namespace, parameters('index'))]",
                            "password_osProfile": {
                              "computername": "[variables('vmName')]",
                              "adminUsername": "[parameters('vm').shared.credentials.adminUsername]",
                              "adminPassword": "[parameters('vm').shared.credentials.password]"
                            },
                            "sshPublicKey_osProfile": {
                              "computername": "[variables('vmName')]",
                              "adminUsername": "[parameters('vm').shared.credentials.adminUsername]",
                              "linuxConfiguration": {
                                "disablePasswordAuthentication": "true",
                                "ssh": {
                                  "publicKeys": [
                                    {
                                      "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('vm').shared.credentials.adminUsername)]",
                                      "keyData": "[parameters('vm').shared.credentials.sshPublicKey]"
                                    }
                                  ]
                                }
                              }
                            },
                            "publicIpName": "[format('{0}-ip', variables('vmName'))]",
                            "nsgIpConfigs": [
                              {},
                              {
                                "networkSecurityGroup": {
                                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('vm').nsg)]"
                                }
                              },
                              {
                                "networkSecurityGroup": {
                                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('vm').nsg)]"
                                },
                                "ipConfigurations": [
                                  {
                                    "name": "ipconfig1",
                                    "properties": {
                                      "primary": true,
                                      "privateIPAllocationMethod": "Dynamic",
                                      "subnet": {
                                        "id": "[parameters('vm').shared.subnetId]"
                                      },
                                      "loadBalancerBackendAddressPools": "[parameters('vm').backendPools]",
                                      "publicIPAddress": {
                                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
                                      }
                                    }
                                  }
                                ]
                              }
                            ],
                            "nsgIpConfig": "[variables('nsgIpConfigs')[if(empty(parameters('vm').nsg), 0, if(parameters('vm').standardInternalLoadBalancer, 2, 1))]]",
                            "nicProperties": {
                              "primary": true,
                              "enableAcceleratedNetworking": "[equals(parameters('vm').acceleratedNetworking, 'Yes')]",
                              "ipConfigurations": [
                                {
                                  "name": "ipconfig1",
                                  "properties": {
                                    "privateIPAllocationMethod": "Dynamic",
                                    "subnet": {
                                      "id": "[parameters('vm').shared.subnetId]"
                                    },
                                    "loadBalancerBackendAddressPools": "[parameters('vm').backendPools]"
                                  }
                                }
                              ]
                            }
                          },
                          "resources": [
                            {
                              "condition": "[and(not(empty(parameters('vm').nsg)), parameters('vm').standardInternalLoadBalancer)]",
                              "type": "Microsoft.Network/publicIPAddresses",
                              "apiVersion": "2019-04-01",
                              "name": "[variables('publicIpName')]",
                              "location": "[parameters('vm').shared.location]",
                              "sku": {
                                "name": "Standard"
                              },
                              "tags": {
                                "provider": "[toUpper(parameters('elasticTags').provider)]"
                              },
                              "properties": {
                                "publicIPAllocationMethod": "Static",
                                "dnsSettings": {
                                  "domainNameLabel": "[format('{0}{1}', variables('vmName'), uniqueString(resourceGroup().id, deployment().name))]"
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Network/networkInterfaces",
                              "apiVersion": "2019-04-01",
                              "name": "[format('{0}-nic', variables('vmName'))]",
                              "location": "[parameters('vm').shared.location]",
                              "tags": {
                                "provider": "[toUpper(parameters('elasticTags').provider)]"
                              },
                              "properties": "[union(variables('nicProperties'), variables('nsgIpConfig'))]",
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Compute/virtualMachines",
                              "apiVersion": "2019-03-01",
                              "name": "[variables('vmName')]",
                              "location": "[parameters('vm').shared.location]",
                              "tags": {
                                "provider": "[toUpper(parameters('elasticTags').provider)]"
                              },
                              "properties": {
                                "availabilitySet": {
                                  "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySet'))]"
                                },
                                "hardwareProfile": {
                                  "vmSize": "[parameters('vm').size]"
                                },
                                "osProfile": "[if(equals(parameters('vm').shared.credentials.authenticationType, 'password'), variables('password_osProfile'), variables('sshPublicKey_osProfile'))]",
                                "storageProfile": {
                                  "imageReference": "[parameters('vm').imageReference]",
                                  "osDisk": {
                                    "name": "[format('{0}-osdisk', variables('vmName'))]",
                                    "managedDisk": {
                                      "storageAccountType": "[parameters('vm').storageAccountType]"
                                    },
                                    "caching": "ReadWrite",
                                    "createOption": "FromImage"
                                  },
                                  "dataDisks": "[parameters('dataDisks').disks]"
                                },
                                "networkProfile": {
                                  "networkInterfaces": [
                                    {
                                      "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('vmName')))]"
                                    }
                                  ]
                                }
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('vmName')))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Compute/virtualMachines/extensions",
                              "apiVersion": "2019-03-01",
                              "name": "[format('{0}/script', variables('vmName'))]",
                              "location": "[parameters('vm').shared.location]",
                              "properties": "[parameters('vm').installScript]",
                              "dependsOn": [
                                "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
                              ]
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Compute/availabilitySets', format('{0}av-set', variables('namespace')))]"
                      ]
                    }
                  ]
                }
              }
            }
          ],
          "outputs": {
            "jumpboxFqdn": {
              "type": "string",
              "value": "[if(equals(parameters('topologySettings').jumpbox, 'yes'), reference(resourceId('Microsoft.Resources/deployments', 'jumpbox')).outputs.fqdn.value, '')]"
            }
          }
        }
      }
    }
  ],
  "outputs": {
    "jumpboxFqdn": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'elasticsearch-nodes')).outputs.jumpboxFqdn.value]"
    }
  }
}