{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1272.37030",
      "templateHash": "9492343597603461709"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "metadata": {
        "description": "Location where resources will be provisioned"
      }
    },
    "namespace": {
      "type": "string",
      "metadata": {
        "description": "The unique namespace for the Kibana VM"
      }
    },
    "https": {
      "type": "string",
      "defaultValue": "No",
      "allowedValues": [
        "Yes",
        "No"
      ],
      "metadata": {
        "description": "Controls if the output address should be HTTP or HTTPS"
      }
    },
    "elasticTags": {
      "type": "object",
      "defaultValue": {
        "provider": "648D2193-0CE0-4EFB-8A82-AF9792184FD9"
      },
      "metadata": {
        "description": "Unique identifiers to allow the Azure Infrastructure to understand the origin of resources deployed to Azure. You do not need to supply a value for this."
      }
    }
  },
  "variables": {
    "publicIpName": "[format('{0}-ip', parameters('namespace'))]",
    "fqdnSchema": "[if(equals(parameters('https'), 'Yes'), 'https://', 'http://')]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2019-04-01",
      "name": "[variables('publicIpName')]",
      "location": "[parameters('location')]",
      "tags": {
        "provider": "[toUpper(parameters('elasticTags').provider)]"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[format('kb-{0}', uniqueString(resourceGroup().id, deployment().name, variables('publicIpName')))]"
        }
      }
    }
  ],
  "outputs": {
    "fqdn": {
      "type": "string",
      "value": "[format('{0}{1}:5601', variables('fqdnSchema'), reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))).dnsSettings.fqdn)]"
    }
  }
}