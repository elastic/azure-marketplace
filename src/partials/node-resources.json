{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1272.37030",
      "templateHash": "17784186431279678646"
    }
  },
  "parameters": {
    "osSettings": {
      "type": "object",
      "metadata": {
        "description": "Operating system settings"
      }
    },
    "commonVmSettings": {
      "type": "object",
      "metadata": {
        "description": "Shared VM settings"
      }
    },
    "topologySettings": {
      "type": "object",
      "metadata": {
        "description": "Aggregate for topology variable"
      }
    },
    "networkSettings": {
      "type": "object",
      "metadata": {
        "description": "Network settings"
      }
    },
    "elasticTags": {
      "type": "object",
      "defaultValue": {
        "provider": "648D2193-0CE0-4EFB-8A82-AF9792184FD9"
      },
      "metadata": {
        "description": "Unique identifiers to allow the Azure Infrastructure to understand the origin of resources deployed to Azure. You do not need to supply a value for this."
      }
    }
  },
  "variables": {
    "locations": {
      "eastus": {
        "platformFaultDomainCount": 3
      },
      "eastus2": {
        "platformFaultDomainCount": 3
      },
      "centralus": {
        "platformFaultDomainCount": 3
      },
      "northcentralus": {
        "platformFaultDomainCount": 3
      },
      "southcentralus": {
        "platformFaultDomainCount": 3
      },
      "westus": {
        "platformFaultDomainCount": 3
      },
      "canadacentral": {
        "platformFaultDomainCount": 3
      },
      "northeurope": {
        "platformFaultDomainCount": 3
      },
      "westeurope": {
        "platformFaultDomainCount": 3
      }
    },
    "normalizedLocation": "[replace(toLower(parameters('commonVmSettings').location), ' ', '')]",
    "platformFaultDomainCount": "[if(contains(variables('locations'), variables('normalizedLocation')), variables('locations')[variables('normalizedLocation')].platformFaultDomainCount, 2)]",
    "vmAcceleratedNetworking": [
      "Standard_D2_v2",
      "Standard_D3_v2",
      "Standard_D4_v2",
      "Standard_D5_v2",
      "Standard_D11_v2",
      "Standard_D12_v2",
      "Standard_D13_v2",
      "Standard_D14_v2",
      "Standard_D15_v2",
      "Standard_DS2_v2",
      "Standard_DS3_v2",
      "Standard_DS4_v2",
      "Standard_DS5_v2",
      "Standard_DS11_v2",
      "Standard_DS12_v2",
      "Standard_DS13_v2",
      "Standard_DS14_v2",
      "Standard_DS15_v2",
      "Standard_F2",
      "Standard_F4",
      "Standard_F8",
      "Standard_F16",
      "Standard_F2s",
      "Standard_F4s",
      "Standard_F8s",
      "Standard_F16s",
      "Standard_D4_v3",
      "Standard_D8_v3",
      "Standard_D16_v3",
      "Standard_D32_v3",
      "Standard_D64_v3",
      "Standard_D4s_v3",
      "Standard_D8s_v3",
      "Standard_D16s_v3",
      "Standard_D32s_v3",
      "Standard_D64s_v3",
      "Standard_E4_v3",
      "Standard_E8_v3",
      "Standard_E16_v3",
      "Standard_E32_v3",
      "Standard_E64_v3",
      "Standard_E64i_v3",
      "Standard_E4s_v3",
      "Standard_E8s_v3",
      "Standard_E16s_v3",
      "Standard_E32s_v3",
      "Standard_E64s_v3",
      "Standard_E64is_v3",
      "Standard_F4s_v2",
      "Standard_F8s_v2",
      "Standard_F16s_v2",
      "Standard_F32s_v2",
      "Standard_F64s_v2",
      "Standard_F72s_v2",
      "Standard_M8ms",
      "Standard_M16ms",
      "Standard_M32ts",
      "Standard_M32ls",
      "Standard_M32ms",
      "Standard_M64s",
      "Standard_M64ls",
      "Standard_M64ms",
      "Standard_M128s",
      "Standard_M128ms",
      "Standard_M64",
      "Standard_M64m",
      "Standard_M128",
      "Standard_M128m"
    ],
    "networkSecurityGroupName": "[format('{0}standard-lb-nsg', parameters('commonVmSettings').namespacePrefix)]",
    "vmNsgProperties": [
      {},
      {
        "securityRules": [
          {
            "name": "External",
            "properties": {
              "description": "Allows inbound traffic from Standard External LB",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "9201",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          }
        ]
      }
    ],
    "standardInternalLoadBalancer": "[equals(parameters('networkSettings').internalSku, 'Standard')]",
    "standardExternalLoadBalancer": "[equals(parameters('networkSettings').externalSku, 'Standard')]",
    "standardInternalOrExternalLoadBalancer": "[or(variables('standardInternalLoadBalancer'), variables('standardExternalLoadBalancer'))]"
  },
  "resources": [
    {
      "condition": "[variables('standardInternalOrExternalLoadBalancer')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-04-01",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[parameters('commonVmSettings').location]",
      "tags": {
        "provider": "[toUpper(parameters('elasticTags').provider)]"
      },
      "properties": "[variables('vmNsgProperties')[if(variables('standardExternalLoadBalancer'), 1, 0)]]"
    },
    {
      "condition": "[equals(parameters('topologySettings').dataNodesAreMasterEligible, 'No')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "master-nodes",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "vm": {
            "value": {
              "shared": "[parameters('commonVmSettings')]",
              "namespace": "[format('{0}master-', parameters('commonVmSettings').namespacePrefix)]",
              "installScript": "[parameters('osSettings').extensionSettings.master]",
              "size": "[parameters('topologySettings').vmSizeMasterNodes]",
              "storageAccountType": "Standard_LRS",
              "count": 3,
              "backendPools": [],
              "imageReference": "[parameters('osSettings').imageReference]",
              "platformFaultDomainCount": "[variables('platformFaultDomainCount')]",
              "acceleratedNetworking": "[if(equals(parameters('topologySettings').vmMasterNodeAcceleratedNetworking, 'Default'), if(contains(variables('vmAcceleratedNetworking'), parameters('topologySettings').vmSizeMasterNodes), 'Yes', 'No'), parameters('topologySettings').vmMasterNodeAcceleratedNetworking)]",
              "nsg": "",
              "standardInternalLoadBalancer": false
            }
          },
          "elasticTags": {
            "value": "[parameters('elasticTags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "12350110167214581172"
            }
          },
          "parameters": {
            "vm": {
              "type": "object",
              "metadata": {
                "description": "vm configuration"
              }
            },
            "elasticTags": {
              "type": "object",
              "defaultValue": {
                "provider": "648D2193-0CE0-4EFB-8A82-AF9792184FD9"
              },
              "metadata": {
                "description": "Unique identifiers to allow the Azure Infrastructure to understand the origin of resources deployed to Azure. You do not need to supply a value for this."
              }
            }
          },
          "variables": {
            "namespace": "[parameters('vm').namespace]"
          },
          "resources": [
            {
              "type": "Microsoft.Compute/availabilitySets",
              "apiVersion": "2019-03-01",
              "name": "[format('{0}av-set', variables('namespace'))]",
              "location": "[parameters('vm').shared.location]",
              "tags": {
                "provider": "[toUpper(parameters('elasticTags').provider)]"
              },
              "properties": {
                "platformUpdateDomainCount": 3,
                "platformFaultDomainCount": "[parameters('vm').platformFaultDomainCount]"
              },
              "sku": {
                "name": "Aligned"
              }
            },
            {
              "copy": {
                "name": "virtualMachine",
                "count": "[length(range(0, parameters('vm').count))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}{1}-vm-creation', variables('namespace'), range(0, parameters('vm').count)[copyIndex()])]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "vm": {
                    "value": "[parameters('vm')]"
                  },
                  "availabilitySet": {
                    "value": "[format('{0}av-set', variables('namespace'))]"
                  },
                  "index": {
                    "value": "[range(0, parameters('vm').count)[copyIndex()]]"
                  },
                  "elasticTags": {
                    "value": "[parameters('elasticTags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9194726631229920325"
                    }
                  },
                  "parameters": {
                    "vm": {
                      "type": "object",
                      "metadata": {
                        "description": "vm configuration"
                      }
                    },
                    "index": {
                      "type": "int",
                      "metadata": {
                        "description": "the outer loop index"
                      }
                    },
                    "availabilitySet": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the availability set"
                      }
                    },
                    "dataDisks": {
                      "type": "object",
                      "defaultValue": {
                        "disks": []
                      },
                      "metadata": {
                        "description": "additional data disks to attach"
                      }
                    },
                    "elasticTags": {
                      "type": "object",
                      "defaultValue": {
                        "provider": "648D2193-0CE0-4EFB-8A82-AF9792184FD9"
                      },
                      "metadata": {
                        "description": "Unique identifiers to allow the Azure Infrastructure to understand the origin of resources deployed to Azure. You do not need to supply a value for this."
                      }
                    }
                  },
                  "variables": {
                    "vmName": "[format('{0}{1}', parameters('vm').namespace, parameters('index'))]",
                    "password_osProfile": {
                      "computername": "[variables('vmName')]",
                      "adminUsername": "[parameters('vm').shared.credentials.adminUsername]",
                      "adminPassword": "[parameters('vm').shared.credentials.password]"
                    },
                    "sshPublicKey_osProfile": {
                      "computername": "[variables('vmName')]",
                      "adminUsername": "[parameters('vm').shared.credentials.adminUsername]",
                      "linuxConfiguration": {
                        "disablePasswordAuthentication": "true",
                        "ssh": {
                          "publicKeys": [
                            {
                              "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('vm').shared.credentials.adminUsername)]",
                              "keyData": "[parameters('vm').shared.credentials.sshPublicKey]"
                            }
                          ]
                        }
                      }
                    },
                    "publicIpName": "[format('{0}-ip', variables('vmName'))]",
                    "nsgIpConfigs": [
                      {},
                      {
                        "networkSecurityGroup": {
                          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('vm').nsg)]"
                        }
                      },
                      {
                        "networkSecurityGroup": {
                          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('vm').nsg)]"
                        },
                        "ipConfigurations": [
                          {
                            "name": "ipconfig1",
                            "properties": {
                              "primary": true,
                              "privateIPAllocationMethod": "Dynamic",
                              "subnet": {
                                "id": "[parameters('vm').shared.subnetId]"
                              },
                              "loadBalancerBackendAddressPools": "[parameters('vm').backendPools]",
                              "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
                              }
                            }
                          }
                        ]
                      }
                    ],
                    "nsgIpConfig": "[variables('nsgIpConfigs')[if(empty(parameters('vm').nsg), 0, if(parameters('vm').standardInternalLoadBalancer, 2, 1))]]",
                    "nicProperties": {
                      "primary": true,
                      "enableAcceleratedNetworking": "[equals(parameters('vm').acceleratedNetworking, 'Yes')]",
                      "ipConfigurations": [
                        {
                          "name": "ipconfig1",
                          "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                              "id": "[parameters('vm').shared.subnetId]"
                            },
                            "loadBalancerBackendAddressPools": "[parameters('vm').backendPools]"
                          }
                        }
                      ]
                    }
                  },
                  "resources": [
                    {
                      "condition": "[and(not(empty(parameters('vm').nsg)), parameters('vm').standardInternalLoadBalancer)]",
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2019-04-01",
                      "name": "[variables('publicIpName')]",
                      "location": "[parameters('vm').shared.location]",
                      "sku": {
                        "name": "Standard"
                      },
                      "tags": {
                        "provider": "[toUpper(parameters('elasticTags').provider)]"
                      },
                      "properties": {
                        "publicIPAllocationMethod": "Static",
                        "dnsSettings": {
                          "domainNameLabel": "[format('{0}{1}', variables('vmName'), uniqueString(resourceGroup().id, deployment().name))]"
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2019-04-01",
                      "name": "[format('{0}-nic', variables('vmName'))]",
                      "location": "[parameters('vm').shared.location]",
                      "tags": {
                        "provider": "[toUpper(parameters('elasticTags').provider)]"
                      },
                      "properties": "[union(variables('nicProperties'), variables('nsgIpConfig'))]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Compute/virtualMachines",
                      "apiVersion": "2019-03-01",
                      "name": "[variables('vmName')]",
                      "location": "[parameters('vm').shared.location]",
                      "tags": {
                        "provider": "[toUpper(parameters('elasticTags').provider)]"
                      },
                      "properties": {
                        "availabilitySet": {
                          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySet'))]"
                        },
                        "hardwareProfile": {
                          "vmSize": "[parameters('vm').size]"
                        },
                        "osProfile": "[if(equals(parameters('vm').shared.credentials.authenticationType, 'password'), variables('password_osProfile'), variables('sshPublicKey_osProfile'))]",
                        "storageProfile": {
                          "imageReference": "[parameters('vm').imageReference]",
                          "osDisk": {
                            "name": "[format('{0}-osdisk', variables('vmName'))]",
                            "managedDisk": {
                              "storageAccountType": "[parameters('vm').storageAccountType]"
                            },
                            "caching": "ReadWrite",
                            "createOption": "FromImage"
                          },
                          "dataDisks": "[parameters('dataDisks').disks]"
                        },
                        "networkProfile": {
                          "networkInterfaces": [
                            {
                              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('vmName')))]"
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('vmName')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "apiVersion": "2019-03-01",
                      "name": "[format('{0}/script', variables('vmName'))]",
                      "location": "[parameters('vm').shared.location]",
                      "properties": "[parameters('vm').installScript]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/availabilitySets', format('{0}av-set', variables('namespace')))]"
              ]
            }
          ]
        }
      }
    },
    {
      "condition": "[greater(parameters('topologySettings').vmClientNodeCount, 0)]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "client-nodes",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "vm": {
            "value": {
              "shared": "[parameters('commonVmSettings')]",
              "namespace": "[format('{0}client-', parameters('commonVmSettings').namespacePrefix)]",
              "installScript": "[parameters('osSettings').extensionSettings.client]",
              "size": "[parameters('topologySettings').vmSizeClientNodes]",
              "count": "[parameters('topologySettings').vmClientNodeCount]",
              "storageAccountType": "Standard_LRS",
              "backendPools": "[parameters('topologySettings').loadBalancerBackEndPools]",
              "imageReference": "[parameters('osSettings').imageReference]",
              "platformFaultDomainCount": "[variables('platformFaultDomainCount')]",
              "acceleratedNetworking": "[if(equals(parameters('topologySettings').vmClientNodeAcceleratedNetworking, 'Default'), if(contains(variables('vmAcceleratedNetworking'), parameters('topologySettings').vmSizeClientNodes), 'Yes', 'No'), parameters('topologySettings').vmClientNodeAcceleratedNetworking)]",
              "nsg": "[if(variables('standardInternalOrExternalLoadBalancer'), variables('networkSecurityGroupName'), '')]",
              "standardInternalLoadBalancer": "[variables('standardInternalLoadBalancer')]"
            }
          },
          "elasticTags": {
            "value": "[parameters('elasticTags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "12111328062697985937"
            }
          },
          "parameters": {
            "vm": {
              "type": "object",
              "metadata": {
                "description": "vm configuration"
              }
            },
            "elasticTags": {
              "type": "object",
              "defaultValue": {
                "provider": "648D2193-0CE0-4EFB-8A82-AF9792184FD9"
              },
              "metadata": {
                "description": "Unique identifiers to allow the Azure Infrastructure to understand the origin of resources deployed to Azure. You do not need to supply a value for this."
              }
            }
          },
          "variables": {
            "namespace": "[parameters('vm').namespace]",
            "availabilitySetName": "[format('{0}av-set', variables('namespace'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Compute/availabilitySets",
              "apiVersion": "2019-03-01",
              "name": "[variables('availabilitySetName')]",
              "location": "[parameters('vm').shared.location]",
              "tags": {
                "provider": "[toUpper(parameters('elasticTags').provider)]"
              },
              "properties": {
                "platformUpdateDomainCount": 20,
                "platformFaultDomainCount": "[parameters('vm').platformFaultDomainCount]"
              },
              "sku": {
                "name": "Aligned"
              }
            },
            {
              "copy": {
                "name": "virtualMachine",
                "count": "[length(range(0, parameters('vm').count))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}{1}-vm-creation', variables('namespace'), range(0, parameters('vm').count)[copyIndex()])]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "vm": {
                    "value": "[parameters('vm')]"
                  },
                  "availabilitySet": {
                    "value": "[variables('availabilitySetName')]"
                  },
                  "index": {
                    "value": "[range(0, parameters('vm').count)[copyIndex()]]"
                  },
                  "elasticTags": {
                    "value": "[parameters('elasticTags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9194726631229920325"
                    }
                  },
                  "parameters": {
                    "vm": {
                      "type": "object",
                      "metadata": {
                        "description": "vm configuration"
                      }
                    },
                    "index": {
                      "type": "int",
                      "metadata": {
                        "description": "the outer loop index"
                      }
                    },
                    "availabilitySet": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the availability set"
                      }
                    },
                    "dataDisks": {
                      "type": "object",
                      "defaultValue": {
                        "disks": []
                      },
                      "metadata": {
                        "description": "additional data disks to attach"
                      }
                    },
                    "elasticTags": {
                      "type": "object",
                      "defaultValue": {
                        "provider": "648D2193-0CE0-4EFB-8A82-AF9792184FD9"
                      },
                      "metadata": {
                        "description": "Unique identifiers to allow the Azure Infrastructure to understand the origin of resources deployed to Azure. You do not need to supply a value for this."
                      }
                    }
                  },
                  "variables": {
                    "vmName": "[format('{0}{1}', parameters('vm').namespace, parameters('index'))]",
                    "password_osProfile": {
                      "computername": "[variables('vmName')]",
                      "adminUsername": "[parameters('vm').shared.credentials.adminUsername]",
                      "adminPassword": "[parameters('vm').shared.credentials.password]"
                    },
                    "sshPublicKey_osProfile": {
                      "computername": "[variables('vmName')]",
                      "adminUsername": "[parameters('vm').shared.credentials.adminUsername]",
                      "linuxConfiguration": {
                        "disablePasswordAuthentication": "true",
                        "ssh": {
                          "publicKeys": [
                            {
                              "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('vm').shared.credentials.adminUsername)]",
                              "keyData": "[parameters('vm').shared.credentials.sshPublicKey]"
                            }
                          ]
                        }
                      }
                    },
                    "publicIpName": "[format('{0}-ip', variables('vmName'))]",
                    "nsgIpConfigs": [
                      {},
                      {
                        "networkSecurityGroup": {
                          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('vm').nsg)]"
                        }
                      },
                      {
                        "networkSecurityGroup": {
                          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('vm').nsg)]"
                        },
                        "ipConfigurations": [
                          {
                            "name": "ipconfig1",
                            "properties": {
                              "primary": true,
                              "privateIPAllocationMethod": "Dynamic",
                              "subnet": {
                                "id": "[parameters('vm').shared.subnetId]"
                              },
                              "loadBalancerBackendAddressPools": "[parameters('vm').backendPools]",
                              "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
                              }
                            }
                          }
                        ]
                      }
                    ],
                    "nsgIpConfig": "[variables('nsgIpConfigs')[if(empty(parameters('vm').nsg), 0, if(parameters('vm').standardInternalLoadBalancer, 2, 1))]]",
                    "nicProperties": {
                      "primary": true,
                      "enableAcceleratedNetworking": "[equals(parameters('vm').acceleratedNetworking, 'Yes')]",
                      "ipConfigurations": [
                        {
                          "name": "ipconfig1",
                          "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                              "id": "[parameters('vm').shared.subnetId]"
                            },
                            "loadBalancerBackendAddressPools": "[parameters('vm').backendPools]"
                          }
                        }
                      ]
                    }
                  },
                  "resources": [
                    {
                      "condition": "[and(not(empty(parameters('vm').nsg)), parameters('vm').standardInternalLoadBalancer)]",
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2019-04-01",
                      "name": "[variables('publicIpName')]",
                      "location": "[parameters('vm').shared.location]",
                      "sku": {
                        "name": "Standard"
                      },
                      "tags": {
                        "provider": "[toUpper(parameters('elasticTags').provider)]"
                      },
                      "properties": {
                        "publicIPAllocationMethod": "Static",
                        "dnsSettings": {
                          "domainNameLabel": "[format('{0}{1}', variables('vmName'), uniqueString(resourceGroup().id, deployment().name))]"
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2019-04-01",
                      "name": "[format('{0}-nic', variables('vmName'))]",
                      "location": "[parameters('vm').shared.location]",
                      "tags": {
                        "provider": "[toUpper(parameters('elasticTags').provider)]"
                      },
                      "properties": "[union(variables('nicProperties'), variables('nsgIpConfig'))]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Compute/virtualMachines",
                      "apiVersion": "2019-03-01",
                      "name": "[variables('vmName')]",
                      "location": "[parameters('vm').shared.location]",
                      "tags": {
                        "provider": "[toUpper(parameters('elasticTags').provider)]"
                      },
                      "properties": {
                        "availabilitySet": {
                          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySet'))]"
                        },
                        "hardwareProfile": {
                          "vmSize": "[parameters('vm').size]"
                        },
                        "osProfile": "[if(equals(parameters('vm').shared.credentials.authenticationType, 'password'), variables('password_osProfile'), variables('sshPublicKey_osProfile'))]",
                        "storageProfile": {
                          "imageReference": "[parameters('vm').imageReference]",
                          "osDisk": {
                            "name": "[format('{0}-osdisk', variables('vmName'))]",
                            "managedDisk": {
                              "storageAccountType": "[parameters('vm').storageAccountType]"
                            },
                            "caching": "ReadWrite",
                            "createOption": "FromImage"
                          },
                          "dataDisks": "[parameters('dataDisks').disks]"
                        },
                        "networkProfile": {
                          "networkInterfaces": [
                            {
                              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('vmName')))]"
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('vmName')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "apiVersion": "2019-03-01",
                      "name": "[format('{0}/script', variables('vmName'))]",
                      "location": "[parameters('vm').shared.location]",
                      "properties": "[parameters('vm').installScript]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "data-nodes",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "vm": {
            "value": {
              "shared": "[parameters('commonVmSettings')]",
              "namespace": "[format('{0}data-', parameters('commonVmSettings').namespacePrefix)]",
              "installScript": "[parameters('osSettings').extensionSettings.data]",
              "size": "[parameters('topologySettings').vmSizeDataNodes]",
              "storageAccountType": "[parameters('topologySettings').vmDataNodeStorageAccountType]",
              "count": "[parameters('topologySettings').vmDataNodeCount]",
              "backendPools": "[parameters('topologySettings').dataLoadBalancerBackEndPools]",
              "imageReference": "[parameters('osSettings').imageReference]",
              "platformFaultDomainCount": "[variables('platformFaultDomainCount')]",
              "acceleratedNetworking": "[if(equals(parameters('topologySettings').vmDataNodeAcceleratedNetworking, 'Default'), if(contains(variables('vmAcceleratedNetworking'), parameters('topologySettings').vmSizeDataNodes), 'Yes', 'No'), parameters('topologySettings').vmDataNodeAcceleratedNetworking)]",
              "nsg": "[if(and(variables('standardInternalOrExternalLoadBalancer'), equals(parameters('topologySettings').vmClientNodeCount, 0)), variables('networkSecurityGroupName'), '')]",
              "standardInternalLoadBalancer": "[variables('standardInternalLoadBalancer')]"
            }
          },
          "storageSettings": {
            "value": "[parameters('topologySettings').dataNodeStorageSettings]"
          },
          "elasticTags": {
            "value": "[parameters('elasticTags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "2896084932501386182"
            }
          },
          "parameters": {
            "vm": {
              "type": "object",
              "metadata": {
                "description": "vm configuration"
              }
            },
            "storageSettings": {
              "type": "object",
              "metadata": {
                "description": "Storage Account Settings"
              }
            },
            "elasticTags": {
              "type": "object",
              "defaultValue": {
                "provider": "648D2193-0CE0-4EFB-8A82-AF9792184FD9"
              },
              "metadata": {
                "description": "Unique identifiers to allow the Azure Infrastructure to understand the origin of resources deployed to Azure. You do not need to supply a value for this."
              }
            }
          },
          "variables": {
            "namespace": "[parameters('vm').namespace]",
            "avSetCount": "[add(div(sub(parameters('vm').count, 1), 100), 1)]",
            "diskCount": "[if(greater(parameters('storageSettings').dataDisks, 0), parameters('storageSettings').dataDisks, 1)]"
          },
          "resources": [
            {
              "copy": {
                "name": "availabilitySets",
                "count": "[length(range(0, variables('avSetCount')))]"
              },
              "type": "Microsoft.Compute/availabilitySets",
              "apiVersion": "2019-03-01",
              "name": "[format('{0}{1}-av-set', variables('namespace'), range(0, variables('avSetCount'))[copyIndex()])]",
              "location": "[parameters('vm').shared.location]",
              "tags": {
                "provider": "[toUpper(parameters('elasticTags').provider)]"
              },
              "properties": {
                "platformUpdateDomainCount": 20,
                "platformFaultDomainCount": "[parameters('vm').platformFaultDomainCount]"
              },
              "sku": {
                "name": "Aligned"
              }
            },
            {
              "condition": "[greater(variables('diskCount'), 0)]",
              "copy": {
                "name": "virtualMachinesWithDisks",
                "count": "[length(range(0, parameters('vm').count))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}{1}-vm-creation', variables('namespace'), range(0, parameters('vm').count)[copyIndex()])]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "vm": {
                    "value": "[parameters('vm')]"
                  },
                  "index": {
                    "value": "[range(0, parameters('vm').count)[copyIndex()]]"
                  },
                  "availabilitySet": {
                    "value": "[format('{0}{1}-av-set', variables('namespace'), mod(range(0, parameters('vm').count)[copyIndex()], variables('avSetCount')))]"
                  },
                  "dataDisks": {
                    "value": {
                      "copy": [
                        {
                          "name": "disks",
                          "count": "[length(range(0, variables('diskCount')))]",
                          "input": {
                            "name": "[format('{0}{1}-datadisk{2}', variables('namespace'), range(0, parameters('vm').count)[copyIndex()], add(range(0, variables('diskCount'))[copyIndex('disks')], 1))]",
                            "diskSizeGB": "[parameters('storageSettings').diskSize]",
                            "lun": "[range(0, variables('diskCount'))[copyIndex('disks')]]",
                            "managedDisk": {
                              "storageAccountType": "[parameters('storageSettings').accountType]"
                            },
                            "caching": "None",
                            "createOption": "Empty"
                          }
                        }
                      ]
                    }
                  },
                  "elasticTags": {
                    "value": "[parameters('elasticTags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9194726631229920325"
                    }
                  },
                  "parameters": {
                    "vm": {
                      "type": "object",
                      "metadata": {
                        "description": "vm configuration"
                      }
                    },
                    "index": {
                      "type": "int",
                      "metadata": {
                        "description": "the outer loop index"
                      }
                    },
                    "availabilitySet": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the availability set"
                      }
                    },
                    "dataDisks": {
                      "type": "object",
                      "defaultValue": {
                        "disks": []
                      },
                      "metadata": {
                        "description": "additional data disks to attach"
                      }
                    },
                    "elasticTags": {
                      "type": "object",
                      "defaultValue": {
                        "provider": "648D2193-0CE0-4EFB-8A82-AF9792184FD9"
                      },
                      "metadata": {
                        "description": "Unique identifiers to allow the Azure Infrastructure to understand the origin of resources deployed to Azure. You do not need to supply a value for this."
                      }
                    }
                  },
                  "variables": {
                    "vmName": "[format('{0}{1}', parameters('vm').namespace, parameters('index'))]",
                    "password_osProfile": {
                      "computername": "[variables('vmName')]",
                      "adminUsername": "[parameters('vm').shared.credentials.adminUsername]",
                      "adminPassword": "[parameters('vm').shared.credentials.password]"
                    },
                    "sshPublicKey_osProfile": {
                      "computername": "[variables('vmName')]",
                      "adminUsername": "[parameters('vm').shared.credentials.adminUsername]",
                      "linuxConfiguration": {
                        "disablePasswordAuthentication": "true",
                        "ssh": {
                          "publicKeys": [
                            {
                              "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('vm').shared.credentials.adminUsername)]",
                              "keyData": "[parameters('vm').shared.credentials.sshPublicKey]"
                            }
                          ]
                        }
                      }
                    },
                    "publicIpName": "[format('{0}-ip', variables('vmName'))]",
                    "nsgIpConfigs": [
                      {},
                      {
                        "networkSecurityGroup": {
                          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('vm').nsg)]"
                        }
                      },
                      {
                        "networkSecurityGroup": {
                          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('vm').nsg)]"
                        },
                        "ipConfigurations": [
                          {
                            "name": "ipconfig1",
                            "properties": {
                              "primary": true,
                              "privateIPAllocationMethod": "Dynamic",
                              "subnet": {
                                "id": "[parameters('vm').shared.subnetId]"
                              },
                              "loadBalancerBackendAddressPools": "[parameters('vm').backendPools]",
                              "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
                              }
                            }
                          }
                        ]
                      }
                    ],
                    "nsgIpConfig": "[variables('nsgIpConfigs')[if(empty(parameters('vm').nsg), 0, if(parameters('vm').standardInternalLoadBalancer, 2, 1))]]",
                    "nicProperties": {
                      "primary": true,
                      "enableAcceleratedNetworking": "[equals(parameters('vm').acceleratedNetworking, 'Yes')]",
                      "ipConfigurations": [
                        {
                          "name": "ipconfig1",
                          "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                              "id": "[parameters('vm').shared.subnetId]"
                            },
                            "loadBalancerBackendAddressPools": "[parameters('vm').backendPools]"
                          }
                        }
                      ]
                    }
                  },
                  "resources": [
                    {
                      "condition": "[and(not(empty(parameters('vm').nsg)), parameters('vm').standardInternalLoadBalancer)]",
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2019-04-01",
                      "name": "[variables('publicIpName')]",
                      "location": "[parameters('vm').shared.location]",
                      "sku": {
                        "name": "Standard"
                      },
                      "tags": {
                        "provider": "[toUpper(parameters('elasticTags').provider)]"
                      },
                      "properties": {
                        "publicIPAllocationMethod": "Static",
                        "dnsSettings": {
                          "domainNameLabel": "[format('{0}{1}', variables('vmName'), uniqueString(resourceGroup().id, deployment().name))]"
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2019-04-01",
                      "name": "[format('{0}-nic', variables('vmName'))]",
                      "location": "[parameters('vm').shared.location]",
                      "tags": {
                        "provider": "[toUpper(parameters('elasticTags').provider)]"
                      },
                      "properties": "[union(variables('nicProperties'), variables('nsgIpConfig'))]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Compute/virtualMachines",
                      "apiVersion": "2019-03-01",
                      "name": "[variables('vmName')]",
                      "location": "[parameters('vm').shared.location]",
                      "tags": {
                        "provider": "[toUpper(parameters('elasticTags').provider)]"
                      },
                      "properties": {
                        "availabilitySet": {
                          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySet'))]"
                        },
                        "hardwareProfile": {
                          "vmSize": "[parameters('vm').size]"
                        },
                        "osProfile": "[if(equals(parameters('vm').shared.credentials.authenticationType, 'password'), variables('password_osProfile'), variables('sshPublicKey_osProfile'))]",
                        "storageProfile": {
                          "imageReference": "[parameters('vm').imageReference]",
                          "osDisk": {
                            "name": "[format('{0}-osdisk', variables('vmName'))]",
                            "managedDisk": {
                              "storageAccountType": "[parameters('vm').storageAccountType]"
                            },
                            "caching": "ReadWrite",
                            "createOption": "FromImage"
                          },
                          "dataDisks": "[parameters('dataDisks').disks]"
                        },
                        "networkProfile": {
                          "networkInterfaces": [
                            {
                              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('vmName')))]"
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('vmName')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "apiVersion": "2019-03-01",
                      "name": "[format('{0}/script', variables('vmName'))]",
                      "location": "[parameters('vm').shared.location]",
                      "properties": "[parameters('vm').installScript]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "availabilitySets"
              ]
            },
            {
              "condition": "[equals(variables('diskCount'), 0)]",
              "copy": {
                "name": "virtualMachinesWithoutDisks",
                "count": "[length(range(0, parameters('vm').count))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}{1}-vm-nodisks-creation', variables('namespace'), range(0, parameters('vm').count)[copyIndex()])]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "vm": {
                    "value": "[parameters('vm')]"
                  },
                  "index": {
                    "value": "[range(0, parameters('vm').count)[copyIndex()]]"
                  },
                  "availabilitySet": {
                    "value": "[format('{0}{1}-av-set', variables('namespace'), mod(range(0, parameters('vm').count)[copyIndex()], variables('avSetCount')))]"
                  },
                  "elasticTags": {
                    "value": "[parameters('elasticTags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9194726631229920325"
                    }
                  },
                  "parameters": {
                    "vm": {
                      "type": "object",
                      "metadata": {
                        "description": "vm configuration"
                      }
                    },
                    "index": {
                      "type": "int",
                      "metadata": {
                        "description": "the outer loop index"
                      }
                    },
                    "availabilitySet": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the availability set"
                      }
                    },
                    "dataDisks": {
                      "type": "object",
                      "defaultValue": {
                        "disks": []
                      },
                      "metadata": {
                        "description": "additional data disks to attach"
                      }
                    },
                    "elasticTags": {
                      "type": "object",
                      "defaultValue": {
                        "provider": "648D2193-0CE0-4EFB-8A82-AF9792184FD9"
                      },
                      "metadata": {
                        "description": "Unique identifiers to allow the Azure Infrastructure to understand the origin of resources deployed to Azure. You do not need to supply a value for this."
                      }
                    }
                  },
                  "variables": {
                    "vmName": "[format('{0}{1}', parameters('vm').namespace, parameters('index'))]",
                    "password_osProfile": {
                      "computername": "[variables('vmName')]",
                      "adminUsername": "[parameters('vm').shared.credentials.adminUsername]",
                      "adminPassword": "[parameters('vm').shared.credentials.password]"
                    },
                    "sshPublicKey_osProfile": {
                      "computername": "[variables('vmName')]",
                      "adminUsername": "[parameters('vm').shared.credentials.adminUsername]",
                      "linuxConfiguration": {
                        "disablePasswordAuthentication": "true",
                        "ssh": {
                          "publicKeys": [
                            {
                              "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('vm').shared.credentials.adminUsername)]",
                              "keyData": "[parameters('vm').shared.credentials.sshPublicKey]"
                            }
                          ]
                        }
                      }
                    },
                    "publicIpName": "[format('{0}-ip', variables('vmName'))]",
                    "nsgIpConfigs": [
                      {},
                      {
                        "networkSecurityGroup": {
                          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('vm').nsg)]"
                        }
                      },
                      {
                        "networkSecurityGroup": {
                          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('vm').nsg)]"
                        },
                        "ipConfigurations": [
                          {
                            "name": "ipconfig1",
                            "properties": {
                              "primary": true,
                              "privateIPAllocationMethod": "Dynamic",
                              "subnet": {
                                "id": "[parameters('vm').shared.subnetId]"
                              },
                              "loadBalancerBackendAddressPools": "[parameters('vm').backendPools]",
                              "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
                              }
                            }
                          }
                        ]
                      }
                    ],
                    "nsgIpConfig": "[variables('nsgIpConfigs')[if(empty(parameters('vm').nsg), 0, if(parameters('vm').standardInternalLoadBalancer, 2, 1))]]",
                    "nicProperties": {
                      "primary": true,
                      "enableAcceleratedNetworking": "[equals(parameters('vm').acceleratedNetworking, 'Yes')]",
                      "ipConfigurations": [
                        {
                          "name": "ipconfig1",
                          "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                              "id": "[parameters('vm').shared.subnetId]"
                            },
                            "loadBalancerBackendAddressPools": "[parameters('vm').backendPools]"
                          }
                        }
                      ]
                    }
                  },
                  "resources": [
                    {
                      "condition": "[and(not(empty(parameters('vm').nsg)), parameters('vm').standardInternalLoadBalancer)]",
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2019-04-01",
                      "name": "[variables('publicIpName')]",
                      "location": "[parameters('vm').shared.location]",
                      "sku": {
                        "name": "Standard"
                      },
                      "tags": {
                        "provider": "[toUpper(parameters('elasticTags').provider)]"
                      },
                      "properties": {
                        "publicIPAllocationMethod": "Static",
                        "dnsSettings": {
                          "domainNameLabel": "[format('{0}{1}', variables('vmName'), uniqueString(resourceGroup().id, deployment().name))]"
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2019-04-01",
                      "name": "[format('{0}-nic', variables('vmName'))]",
                      "location": "[parameters('vm').shared.location]",
                      "tags": {
                        "provider": "[toUpper(parameters('elasticTags').provider)]"
                      },
                      "properties": "[union(variables('nicProperties'), variables('nsgIpConfig'))]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Compute/virtualMachines",
                      "apiVersion": "2019-03-01",
                      "name": "[variables('vmName')]",
                      "location": "[parameters('vm').shared.location]",
                      "tags": {
                        "provider": "[toUpper(parameters('elasticTags').provider)]"
                      },
                      "properties": {
                        "availabilitySet": {
                          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySet'))]"
                        },
                        "hardwareProfile": {
                          "vmSize": "[parameters('vm').size]"
                        },
                        "osProfile": "[if(equals(parameters('vm').shared.credentials.authenticationType, 'password'), variables('password_osProfile'), variables('sshPublicKey_osProfile'))]",
                        "storageProfile": {
                          "imageReference": "[parameters('vm').imageReference]",
                          "osDisk": {
                            "name": "[format('{0}-osdisk', variables('vmName'))]",
                            "managedDisk": {
                              "storageAccountType": "[parameters('vm').storageAccountType]"
                            },
                            "caching": "ReadWrite",
                            "createOption": "FromImage"
                          },
                          "dataDisks": "[parameters('dataDisks').disks]"
                        },
                        "networkProfile": {
                          "networkInterfaces": [
                            {
                              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('vmName')))]"
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('vmName')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "apiVersion": "2019-03-01",
                      "name": "[format('{0}/script', variables('vmName'))]",
                      "location": "[parameters('vm').shared.location]",
                      "properties": "[parameters('vm').installScript]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "availabilitySets"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
      ]
    },
    {
      "condition": "[equals(parameters('topologySettings').jumpbox, 'yes')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "jumpbox",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "credentials": {
            "value": "[parameters('commonVmSettings').credentials]"
          },
          "location": {
            "value": "[parameters('commonVmSettings').location]"
          },
          "vmName": {
            "value": "[format('{0}jumpbox', parameters('commonVmSettings').namespacePrefix)]"
          },
          "networkSettings": {
            "value": "[parameters('networkSettings')]"
          },
          "osSettings": {
            "value": "[parameters('osSettings')]"
          },
          "elasticTags": {
            "value": "[parameters('elasticTags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "7272365375184994060"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location where resources will be provisioned"
              }
            },
            "vmName": {
              "type": "string",
              "metadata": {
                "description": "The unique namespace for jumpbox nodes"
              }
            },
            "networkSettings": {
              "type": "object",
              "metadata": {
                "description": "Network settings"
              }
            },
            "credentials": {
              "type": "secureObject",
              "metadata": {
                "description": "Credential information block"
              }
            },
            "osSettings": {
              "type": "object",
              "metadata": {
                "description": "Elasticsearch deployment platform settings"
              }
            },
            "elasticTags": {
              "type": "object",
              "defaultValue": {
                "provider": "648D2193-0CE0-4EFB-8A82-AF9792184FD9"
              },
              "metadata": {
                "description": "Unique identifiers to allow the Azure Infrastructure to understand the origin of resources deployed to Azure. You do not need to supply a value for this."
              }
            }
          },
          "variables": {
            "vmSize": "Standard_A0",
            "subnetId": "[resourceId(parameters('networkSettings').resourceGroup, 'Microsoft.Network/virtualNetworks/subnets', parameters('networkSettings').name, parameters('networkSettings').subnet.name)]",
            "publicIpName": "[format('{0}-ip', parameters('vmName'))]",
            "securityGroupName": "[format('{0}-nsg', parameters('vmName'))]",
            "vmNetworkInterfaceName": "[format('{0}-nic', parameters('vmName'))]",
            "password_osProfile": {
              "computername": "[parameters('vmName')]",
              "adminUsername": "[parameters('credentials').adminUsername]",
              "adminPassword": "[parameters('credentials').password]"
            },
            "sshPublicKey_osProfile": {
              "computername": "[parameters('vmName')]",
              "adminUsername": "[parameters('credentials').adminUsername]",
              "linuxConfiguration": {
                "disablePasswordAuthentication": "true",
                "ssh": {
                  "publicKeys": [
                    {
                      "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('credentials').adminUsername)]",
                      "keyData": "[parameters('credentials').sshPublicKey]"
                    }
                  ]
                }
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2019-04-01",
              "name": "[variables('securityGroupName')]",
              "location": "[parameters('location')]",
              "tags": {
                "provider": "[toUpper(parameters('elasticTags').provider)]"
              },
              "properties": {
                "securityRules": [
                  {
                    "name": "SSH",
                    "properties": {
                      "description": "Allows SSH traffic",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "[parameters('osSettings').managementPort]",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 100,
                      "direction": "Inbound"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2019-04-01",
              "name": "[variables('publicIpName')]",
              "location": "[parameters('location')]",
              "tags": {
                "provider": "[toUpper(parameters('elasticTags').provider)]"
              },
              "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                  "domainNameLabel": "[format('jump-{0}', uniqueString(resourceGroup().id, deployment().name))]"
                }
              }
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2019-04-01",
              "name": "[variables('vmNetworkInterfaceName')]",
              "location": "[parameters('location')]",
              "tags": {
                "provider": "[toUpper(parameters('elasticTags').provider)]"
              },
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
                      },
                      "subnet": {
                        "id": "[variables('subnetId')]"
                      }
                    }
                  }
                ],
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('securityGroupName'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('securityGroupName'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2019-03-01",
              "name": "[parameters('vmName')]",
              "location": "[parameters('location')]",
              "tags": {
                "provider": "[toUpper(parameters('elasticTags').provider)]"
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[variables('vmSize')]"
                },
                "osProfile": "[if(equals(parameters('credentials').authenticationType, 'password'), variables('password_osProfile'), variables('sshPublicKey_osProfile'))]",
                "storageProfile": {
                  "imageReference": "[parameters('osSettings').imageReference]",
                  "osDisk": {
                    "name": "[format('{0}-osdisk', parameters('vmName'))]",
                    "managedDisk": {
                      "storageAccountType": "Standard_LRS"
                    },
                    "caching": "ReadWrite",
                    "createOption": "FromImage"
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vmNetworkInterfaceName'))]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('vmNetworkInterfaceName'))]"
              ]
            }
          ],
          "outputs": {
            "fqdn": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))).dnsSettings.fqdn]"
            }
          }
        }
      }
    },
    {
      "condition": "[equals(parameters('topologySettings').kibana, 'Yes')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "kibana",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "credentials": {
            "value": "[parameters('commonVmSettings').credentials]"
          },
          "location": {
            "value": "[parameters('commonVmSettings').location]"
          },
          "vmName": {
            "value": "[format('{0}kibana', parameters('commonVmSettings').namespacePrefix)]"
          },
          "networkSettings": {
            "value": "[parameters('networkSettings')]"
          },
          "osSettings": {
            "value": "[parameters('osSettings')]"
          },
          "vmSize": {
            "value": "[parameters('topologySettings').vmSizeKibana]"
          },
          "acceleratedNetworking": {
            "value": "[if(equals(parameters('topologySettings').vmKibanaAcceleratedNetworking, 'Default'), if(contains(variables('vmAcceleratedNetworking'), parameters('topologySettings').vmSizeKibana), 'Yes', 'No'), parameters('topologySettings').vmKibanaAcceleratedNetworking)]"
          },
          "elasticTags": {
            "value": "[parameters('elasticTags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "18390787985649623517"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Location where resources will be provisioned"
              }
            },
            "vmName": {
              "type": "string",
              "metadata": {
                "description": "The unique namespace for the Kibana VM"
              }
            },
            "networkSettings": {
              "type": "object",
              "metadata": {
                "description": "Network settings"
              }
            },
            "credentials": {
              "type": "secureObject",
              "metadata": {
                "description": "Credentials information block"
              }
            },
            "osSettings": {
              "type": "object",
              "metadata": {
                "description": "Platform and OS settings"
              }
            },
            "vmSize": {
              "type": "string",
              "defaultValue": "Standard_A1",
              "metadata": {
                "description": "Size of the Kibana VM"
              }
            },
            "acceleratedNetworking": {
              "type": "string",
              "defaultValue": "No",
              "allowedValues": [
                "Yes",
                "No"
              ],
              "metadata": {
                "description": "Whether to enable accelerated networking for Kibana, which enables single root I/O virtualization (SR-IOV) to a VM, greatly improving its networking performance. Valid only for specific VM SKUs"
              }
            },
            "elasticTags": {
              "type": "object",
              "defaultValue": {
                "provider": "648D2193-0CE0-4EFB-8A82-AF9792184FD9"
              },
              "metadata": {
                "description": "Unique identifiers to allow the Azure Infrastructure to understand the origin of resources deployed to Azure. You do not need to supply a value for this."
              }
            }
          },
          "variables": {
            "subnetId": "[resourceId(parameters('networkSettings').resourceGroup, 'Microsoft.Network/virtualNetworks/subnets', parameters('networkSettings').name, parameters('networkSettings').subnet.name)]",
            "publicIpName": "[format('{0}-ip', parameters('vmName'))]",
            "securityGroupName": "[format('{0}-nsg', parameters('vmName'))]",
            "networkInterfaceName": "[format('{0}-nic', parameters('vmName'))]",
            "password_osProfile": {
              "computername": "[parameters('vmName')]",
              "adminUsername": "[parameters('credentials').adminUsername]",
              "adminPassword": "[parameters('credentials').password]"
            },
            "sshPublicKey_osProfile": {
              "computername": "[parameters('vmName')]",
              "adminUsername": "[parameters('credentials').adminUsername]",
              "linuxConfiguration": {
                "disablePasswordAuthentication": "true",
                "ssh": {
                  "publicKeys": [
                    {
                      "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('credentials').adminUsername)]",
                      "keyData": "[parameters('credentials').sshPublicKey]"
                    }
                  ]
                }
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2019-04-01",
              "name": "[variables('securityGroupName')]",
              "location": "[parameters('location')]",
              "tags": {
                "provider": "[toUpper(parameters('elasticTags').provider)]"
              },
              "properties": {
                "securityRules": [
                  {
                    "name": "SSH",
                    "properties": {
                      "description": "Allows inbound SSH traffic from anyone",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "[parameters('osSettings').managementPort]",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 100,
                      "direction": "Inbound"
                    }
                  },
                  {
                    "name": "Kibana",
                    "properties": {
                      "description": "Allows inbound Kibana traffic from anyone",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "5601",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 200,
                      "direction": "Inbound"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2019-04-01",
              "name": "[variables('networkInterfaceName')]",
              "location": "[parameters('location')]",
              "tags": {
                "provider": "[toUpper(parameters('elasticTags').provider)]"
              },
              "properties": {
                "primary": true,
                "enableAcceleratedNetworking": "[equals(parameters('acceleratedNetworking'), 'Yes')]",
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
                      },
                      "subnet": {
                        "id": "[variables('subnetId')]"
                      }
                    }
                  }
                ],
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('securityGroupName'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('securityGroupName'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2019-03-01",
              "name": "[parameters('vmName')]",
              "location": "[parameters('location')]",
              "tags": {
                "provider": "[toUpper(parameters('elasticTags').provider)]"
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": "[if(equals(parameters('credentials').authenticationType, 'password'), variables('password_osProfile'), variables('sshPublicKey_osProfile'))]",
                "storageProfile": {
                  "imageReference": "[parameters('osSettings').imageReference]",
                  "osDisk": {
                    "name": "[format('{0}-osdisk', parameters('vmName'))]",
                    "managedDisk": {
                      "storageAccountType": "Standard_LRS"
                    },
                    "caching": "ReadWrite",
                    "createOption": "FromImage"
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2019-03-01",
              "name": "[format('{0}/script', parameters('vmName'))]",
              "location": "[parameters('location')]",
              "properties": "[parameters('osSettings').extensionSettings.kibana]",
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
              ]
            }
          ]
        }
      }
    },
    {
      "condition": "[equals(parameters('topologySettings').logstash, 'Yes')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "logstash",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "vm": {
            "value": {
              "shared": "[parameters('commonVmSettings')]",
              "namespace": "[format('{0}logstash-', parameters('commonVmSettings').namespacePrefix)]",
              "installScript": "[parameters('osSettings').extensionSettings.logstash]",
              "size": "[parameters('topologySettings').vmSizeLogstash]",
              "storageAccountType": "Standard_LRS",
              "count": "[parameters('topologySettings').vmLogstashCount]",
              "backendPools": [],
              "imageReference": "[parameters('osSettings').imageReference]",
              "platformFaultDomainCount": "[variables('platformFaultDomainCount')]",
              "acceleratedNetworking": "[if(equals(parameters('topologySettings').vmLogstashAcceleratedNetworking, 'Default'), if(contains(variables('vmAcceleratedNetworking'), parameters('topologySettings').vmSizeLogstash), 'Yes', 'No'), parameters('topologySettings').vmLogstashAcceleratedNetworking)]",
              "nsg": "",
              "standardInternalLoadBalancer": false
            }
          },
          "elasticTags": {
            "value": "[parameters('elasticTags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1272.37030",
              "templateHash": "957160880857125983"
            }
          },
          "parameters": {
            "vm": {
              "type": "object",
              "metadata": {
                "description": "vm configuration"
              }
            },
            "elasticTags": {
              "type": "object",
              "defaultValue": {
                "provider": "648D2193-0CE0-4EFB-8A82-AF9792184FD9"
              },
              "metadata": {
                "description": "Unique identifiers to allow the Azure Infrastructure to understand the origin of resources deployed to Azure. You do not need to supply a value for this."
              }
            }
          },
          "variables": {
            "namespace": "[parameters('vm').namespace]"
          },
          "resources": [
            {
              "type": "Microsoft.Compute/availabilitySets",
              "apiVersion": "2019-03-01",
              "name": "[format('{0}av-set', variables('namespace'))]",
              "location": "[parameters('vm').shared.location]",
              "tags": {
                "provider": "[toUpper(parameters('elasticTags').provider)]"
              },
              "properties": {
                "platformUpdateDomainCount": 20,
                "platformFaultDomainCount": "[parameters('vm').platformFaultDomainCount]"
              },
              "sku": {
                "name": "Aligned"
              }
            },
            {
              "copy": {
                "name": "virtualMachine",
                "count": "[length(range(0, parameters('vm').count))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}{1}-vm-creation', variables('namespace'), range(0, parameters('vm').count)[copyIndex()])]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "vm": {
                    "value": "[parameters('vm')]"
                  },
                  "availabilitySet": {
                    "value": "[format('{0}av-set', variables('namespace'))]"
                  },
                  "index": {
                    "value": "[range(0, parameters('vm').count)[copyIndex()]]"
                  },
                  "elasticTags": {
                    "value": "[parameters('elasticTags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1272.37030",
                      "templateHash": "9194726631229920325"
                    }
                  },
                  "parameters": {
                    "vm": {
                      "type": "object",
                      "metadata": {
                        "description": "vm configuration"
                      }
                    },
                    "index": {
                      "type": "int",
                      "metadata": {
                        "description": "the outer loop index"
                      }
                    },
                    "availabilitySet": {
                      "type": "string",
                      "metadata": {
                        "description": "The name of the availability set"
                      }
                    },
                    "dataDisks": {
                      "type": "object",
                      "defaultValue": {
                        "disks": []
                      },
                      "metadata": {
                        "description": "additional data disks to attach"
                      }
                    },
                    "elasticTags": {
                      "type": "object",
                      "defaultValue": {
                        "provider": "648D2193-0CE0-4EFB-8A82-AF9792184FD9"
                      },
                      "metadata": {
                        "description": "Unique identifiers to allow the Azure Infrastructure to understand the origin of resources deployed to Azure. You do not need to supply a value for this."
                      }
                    }
                  },
                  "variables": {
                    "vmName": "[format('{0}{1}', parameters('vm').namespace, parameters('index'))]",
                    "password_osProfile": {
                      "computername": "[variables('vmName')]",
                      "adminUsername": "[parameters('vm').shared.credentials.adminUsername]",
                      "adminPassword": "[parameters('vm').shared.credentials.password]"
                    },
                    "sshPublicKey_osProfile": {
                      "computername": "[variables('vmName')]",
                      "adminUsername": "[parameters('vm').shared.credentials.adminUsername]",
                      "linuxConfiguration": {
                        "disablePasswordAuthentication": "true",
                        "ssh": {
                          "publicKeys": [
                            {
                              "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('vm').shared.credentials.adminUsername)]",
                              "keyData": "[parameters('vm').shared.credentials.sshPublicKey]"
                            }
                          ]
                        }
                      }
                    },
                    "publicIpName": "[format('{0}-ip', variables('vmName'))]",
                    "nsgIpConfigs": [
                      {},
                      {
                        "networkSecurityGroup": {
                          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('vm').nsg)]"
                        }
                      },
                      {
                        "networkSecurityGroup": {
                          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('vm').nsg)]"
                        },
                        "ipConfigurations": [
                          {
                            "name": "ipconfig1",
                            "properties": {
                              "primary": true,
                              "privateIPAllocationMethod": "Dynamic",
                              "subnet": {
                                "id": "[parameters('vm').shared.subnetId]"
                              },
                              "loadBalancerBackendAddressPools": "[parameters('vm').backendPools]",
                              "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
                              }
                            }
                          }
                        ]
                      }
                    ],
                    "nsgIpConfig": "[variables('nsgIpConfigs')[if(empty(parameters('vm').nsg), 0, if(parameters('vm').standardInternalLoadBalancer, 2, 1))]]",
                    "nicProperties": {
                      "primary": true,
                      "enableAcceleratedNetworking": "[equals(parameters('vm').acceleratedNetworking, 'Yes')]",
                      "ipConfigurations": [
                        {
                          "name": "ipconfig1",
                          "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                              "id": "[parameters('vm').shared.subnetId]"
                            },
                            "loadBalancerBackendAddressPools": "[parameters('vm').backendPools]"
                          }
                        }
                      ]
                    }
                  },
                  "resources": [
                    {
                      "condition": "[and(not(empty(parameters('vm').nsg)), parameters('vm').standardInternalLoadBalancer)]",
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2019-04-01",
                      "name": "[variables('publicIpName')]",
                      "location": "[parameters('vm').shared.location]",
                      "sku": {
                        "name": "Standard"
                      },
                      "tags": {
                        "provider": "[toUpper(parameters('elasticTags').provider)]"
                      },
                      "properties": {
                        "publicIPAllocationMethod": "Static",
                        "dnsSettings": {
                          "domainNameLabel": "[format('{0}{1}', variables('vmName'), uniqueString(resourceGroup().id, deployment().name))]"
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2019-04-01",
                      "name": "[format('{0}-nic', variables('vmName'))]",
                      "location": "[parameters('vm').shared.location]",
                      "tags": {
                        "provider": "[toUpper(parameters('elasticTags').provider)]"
                      },
                      "properties": "[union(variables('nicProperties'), variables('nsgIpConfig'))]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Compute/virtualMachines",
                      "apiVersion": "2019-03-01",
                      "name": "[variables('vmName')]",
                      "location": "[parameters('vm').shared.location]",
                      "tags": {
                        "provider": "[toUpper(parameters('elasticTags').provider)]"
                      },
                      "properties": {
                        "availabilitySet": {
                          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySet'))]"
                        },
                        "hardwareProfile": {
                          "vmSize": "[parameters('vm').size]"
                        },
                        "osProfile": "[if(equals(parameters('vm').shared.credentials.authenticationType, 'password'), variables('password_osProfile'), variables('sshPublicKey_osProfile'))]",
                        "storageProfile": {
                          "imageReference": "[parameters('vm').imageReference]",
                          "osDisk": {
                            "name": "[format('{0}-osdisk', variables('vmName'))]",
                            "managedDisk": {
                              "storageAccountType": "[parameters('vm').storageAccountType]"
                            },
                            "caching": "ReadWrite",
                            "createOption": "FromImage"
                          },
                          "dataDisks": "[parameters('dataDisks').disks]"
                        },
                        "networkProfile": {
                          "networkInterfaces": [
                            {
                              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('vmName')))]"
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('vmName')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Compute/virtualMachines/extensions",
                      "apiVersion": "2019-03-01",
                      "name": "[format('{0}/script', variables('vmName'))]",
                      "location": "[parameters('vm').shared.location]",
                      "properties": "[parameters('vm').installScript]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
                      ]
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/availabilitySets', format('{0}av-set', variables('namespace')))]"
              ]
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "jumpboxFqdn": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'jumpbox')).outputs.fqdn.value]"
    }
  }
}