{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1272.37030",
      "templateHash": "18390787985649623517"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "metadata": {
        "description": "Location where resources will be provisioned"
      }
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "The unique namespace for the Kibana VM"
      }
    },
    "networkSettings": {
      "type": "object",
      "metadata": {
        "description": "Network settings"
      }
    },
    "credentials": {
      "type": "secureObject",
      "metadata": {
        "description": "Credentials information block"
      }
    },
    "osSettings": {
      "type": "object",
      "metadata": {
        "description": "Platform and OS settings"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A1",
      "metadata": {
        "description": "Size of the Kibana VM"
      }
    },
    "acceleratedNetworking": {
      "type": "string",
      "defaultValue": "No",
      "allowedValues": [
        "Yes",
        "No"
      ],
      "metadata": {
        "description": "Whether to enable accelerated networking for Kibana, which enables single root I/O virtualization (SR-IOV) to a VM, greatly improving its networking performance. Valid only for specific VM SKUs"
      }
    },
    "elasticTags": {
      "type": "object",
      "defaultValue": {
        "provider": "648D2193-0CE0-4EFB-8A82-AF9792184FD9"
      },
      "metadata": {
        "description": "Unique identifiers to allow the Azure Infrastructure to understand the origin of resources deployed to Azure. You do not need to supply a value for this."
      }
    }
  },
  "variables": {
    "subnetId": "[resourceId(parameters('networkSettings').resourceGroup, 'Microsoft.Network/virtualNetworks/subnets', parameters('networkSettings').name, parameters('networkSettings').subnet.name)]",
    "publicIpName": "[format('{0}-ip', parameters('vmName'))]",
    "securityGroupName": "[format('{0}-nsg', parameters('vmName'))]",
    "networkInterfaceName": "[format('{0}-nic', parameters('vmName'))]",
    "password_osProfile": {
      "computername": "[parameters('vmName')]",
      "adminUsername": "[parameters('credentials').adminUsername]",
      "adminPassword": "[parameters('credentials').password]"
    },
    "sshPublicKey_osProfile": {
      "computername": "[parameters('vmName')]",
      "adminUsername": "[parameters('credentials').adminUsername]",
      "linuxConfiguration": {
        "disablePasswordAuthentication": "true",
        "ssh": {
          "publicKeys": [
            {
              "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('credentials').adminUsername)]",
              "keyData": "[parameters('credentials').sshPublicKey]"
            }
          ]
        }
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-04-01",
      "name": "[variables('securityGroupName')]",
      "location": "[parameters('location')]",
      "tags": {
        "provider": "[toUpper(parameters('elasticTags').provider)]"
      },
      "properties": {
        "securityRules": [
          {
            "name": "SSH",
            "properties": {
              "description": "Allows inbound SSH traffic from anyone",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "[parameters('osSettings').managementPort]",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "Kibana",
            "properties": {
              "description": "Allows inbound Kibana traffic from anyone",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "5601",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2019-04-01",
      "name": "[variables('networkInterfaceName')]",
      "location": "[parameters('location')]",
      "tags": {
        "provider": "[toUpper(parameters('elasticTags').provider)]"
      },
      "properties": {
        "primary": true,
        "enableAcceleratedNetworking": "[equals(parameters('acceleratedNetworking'), 'Yes')]",
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
              },
              "subnet": {
                "id": "[variables('subnetId')]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('securityGroupName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('securityGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2019-03-01",
      "name": "[parameters('vmName')]",
      "location": "[parameters('location')]",
      "tags": {
        "provider": "[toUpper(parameters('elasticTags').provider)]"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": "[if(equals(parameters('credentials').authenticationType, 'password'), variables('password_osProfile'), variables('sshPublicKey_osProfile'))]",
        "storageProfile": {
          "imageReference": "[parameters('osSettings').imageReference]",
          "osDisk": {
            "name": "[format('{0}-osdisk', parameters('vmName'))]",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2019-03-01",
      "name": "[format('{0}/script', parameters('vmName'))]",
      "location": "[parameters('location')]",
      "properties": "[parameters('osSettings').extensionSettings.kibana]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
      ]
    }
  ]
}