:marketplace: https://azuremarketplace.microsoft.com/en-au/marketplace/apps/elastic.elasticsearch
:portal: https://portal.azure.com
:github: https://github.com/elastic/azure-marketplace
:elasticdocs: https://www.elastic.co/guide/en/elasticsearch/reference/current
:elasticstack: https://www.elastic.co/products/stack
:xpackdocs: https://www.elastic.co/guide/en/x-pack/current
:microsoftdocs: https://docs.microsoft.com
:azurecli: {microsoftdocs}/cli/azure/?view=azure-cli-latest
:azurepowershell: {microsoftdocs}/powershell/azure/overview?view=azurermps-6.4.0
:azurecalculator: https://azure.microsoft.com/en-us/pricing/calculator/
:subscriptions: https://www.elastic.co/subscriptions
:sshkey: {microsoftdocs}/azure/virtual-machines/linux/ssh-from-windows
:resourcegroup: {microsoftdocs}/azure/azure-resource-manager/resource-group-portal
:incrementalmode: {microsoftdocs}/azure/azure-resource-manager/resource-group-template-deploy#incremental-and-complete-deployments
:basicsecurity: https://www.elastic.co/blog/security-for-elasticsearch-is-now-free
:contact: https://www.elastic.co/contact

[[azure-marketplace]]
== Azure Marketplace solution

The Azure Marketplace solution offering is a preconfigured
template to deploy an Elasticsearch cluster, Kibana and Logstash to Azure. It's available
on {marketplace}[Microsoft's Azure Marketplace], making it easy to find and
consume.

The solution template is a Bring-Your-Own-License (BYOL) offering; the solution
always deploys with a 30 day trial license that enables
all {subscriptions}[the Platinum features of the Elastic Stack], to provide the best getting
started experience. After the trial license expires, Elasticsearch operates
in a degraded mode.

[[azure-marketplace-getting-started]]
=== Getting started with the Azure Marketplace

Navigate to the {marketplace}[Azure Marketplace] offering, and click the "Get it Now"
button:

image:images/marketplace.png[]

This will take you straight to the solution from the Marketplace, within the
{portal}[Azure portal]. If you're not already logged into the portal, you'll be
prompted to do so first.

Once you're ready to proceed, click the Create button to walk through the steps.

[[marketplace-steps]]
==== Marketplace steps

Each step of the process is presented in its own blade within the portal, which
we'll walk through.

[[basics-step]]
==== Basics

The first step involves setting up the details for the username and authentication
mechanism you'll use to access the virtual machines deployed by the solution:

image:images/marketplace_step1.png[]

The username must be a valid Ubuntu username and for authentication mechanism,
choose between password or {sshkey}[SSH key]. When choosing SSH key, password
authentication will be disabled on the virtual machines.

Next, choose the subscription, resource group and location into which to deploy
the solution. When choosing an existing resource group, there a couple of points
to bear in mind

. A resource group is a container that holds related resources. As such,
{resourcegroup}[those resources share the same lifecycle, permissions and policies]

. The solution template deploys in {incrementalmode}[incremental mode]; If a previous solution
deployment has been performed into the target resource group, the resources that
exist in the resource group but are not in the template are left unchanged. All resources
that are specified by the solution will be deployed, and for those resources that
already exist and whose settings are unchanged, no change will be made. For those
resources whose settings are changed however, the resource is provisioned with those
new settings. What this means in practice is that you should carefully consider
how the settings specified within the template being deployed may affect the resources
that could be currently running Elasticsearch.

TIP: More often than not, you'll want to deploy the solution into a new resource
group. Providing access to Elasticsearch to existing Azure resources such as
Azure App Services can be achieved by connecting the deployed virtual machines
to an existing virtual network, which can be specified in the next step.

[[cluster-settings-step]]
==== Cluster settings

the Cluster settings blade provides the option to pick the version of Elasticsearch
to deploy, and give the cluster a name:

image:images/marketplace_step2.png[]

Additionally, the solution can deploy a new virtual network or use an existing
virtual network within the same subscription and location as the target resource
group. This is particularly useful in situations where resources may already be
deployed in another resource group, and the cluster should be accessible to those
resources on the same network, and possibly same subnet.

[IMPORTANT]
--
The Azure Marketplace constrains the available existing subnets to those that 
have a prefix size of `/25` i.e. 128 addresses or more. The prefix size must
be large enough to be able to accommodate the largest size cluster/deployment 
that the Marketplace offering can deploy, and the prefix size chosen is the smallest
that meets this requirement. The ability to dynamically adjust the prefix size
based on the cluster topology to be deployed is not possible.

Fortunately, this is _only_ a Marketplace UI constraint and not an ARM template constraint! 
It is possible to deploy a cluster <<azure-arm-template, using the ARM template from our GitHub repository directly>>, 
and select the existing virtual network and subnet that you want to use, 
using the <<azure-arm-template-networking, networking parameters>>. Be sure to target a 
specific GitHub tag release for <<azure-arm-template-repeatable-deployments, repeatable deployments>>. 
--

[[nodes-configuration-step]]
==== Nodes configuration

The Nodes configuration blade controls the number of each
{elasticdocs}/modules-node.html[type of node] to deploy for the cluster:

image:images/marketplace_step3.png[]

IMPORTANT: Elasticsearch nodes resolve other nodes on the network by their hostname,
which Azure DNS supports. It is therefore critical that when deploying a cluster to
an existing virtual network, the hostnames for Elasticsearch nodes are unique. The
`Hostname prefix` input will be applied to the naming convention for master, data and coordinating
nodes, allowing for unique hostnames when deploying multiple clusters to the same
virtual network.

For data nodes, the number of {microsoftdocs}/azure/virtual-machines/windows/managed-disks-overview[managed disks],
in addition to size and type of disks,
can be specified. When the number of managed disks is two or more, a RAID 0
array is created across the disks to improve overall operations. When no disks are
specified, the node will use the temp storage of the VM for the data directory.

include::temp-storage-admonition.asciidoc[]

[[external-access-step]]
==== Kibana, Logstash and External Access

The Kibana & Logstash blade determines whether to deploy Kibana and/or Logstash
in addition to Elasticsearch, as well as how the cluster can be accessed from outside
of the virtual network:

image:images/marketplace_step4.png[]

When installing Kibana, a separate VM will be provisioned onto which Kibana will
be deployed and a public IP address will be attached
to the Kibana VM along with a Network Security group, allowing TCP access over ports
5601 and 22. The former is used to connect to Kibana through the browser, whilst
the latter is used to connect to the Kibana VM via SSH.

image:images/marketplace_step4_2.png[]

When installing Logstash, separate VMs will be provisioned onto which Logstash
will be deployed. A Logstash configuration file can be specified, as well as additional
Logstash plugins to install. The Logstash VMs are placed in an Availability set.

A jumpbox VM can optionally be deployed, which can be connected to via SSH in order
to gain access to the Elasticsearch VMs.

Either an internal or external load balancer can be deployed from the Marketplace;
When choosing external load balancer, both an internal and external load balancer will
be deployed. Kibana will use the internal load balancer to communicate with Elasticsearch,
and the external load balancer is configured with a public IP address , allowing access
to Elasticsearch from outside of Azure over port 9200.

[[user-configuration-step]]
==== User configuration

An Elasticsearch cluster deployed through the Azure Marketplace is always deployed
with a 30 day trial license that enables all of {subscriptions}[the platinum features of the Elastic Stack]. 
Security features allow Basic Authentication configuration for the cluster, setting up six
{xpackdocs}/setting-up-authentication.html[built-in user accounts]

. The `elastic` user, a built-in superuser account
. The `kibana` user, a built-in account that Kibana uses to connect and
communicate with Elasticsearch
. The `logstash_system` user, a built-in account that can be used by Logstash
when storing monitoring information in Elasticsearch.
. The `beats_system` user, a built-in account that can be used by Beats
when storing monitoring information in Elasticsearch.
. The `apm_system` user, a built-in account that can be used by APM server
when storing APM information in Elasticsearch.
. The `remote_monitoring_user` user, a built-in account that can be used
by Metricbeat when collecting and storing monitoring information in Elasticsearch. 

image:images/marketplace_step5.png[]

Passwords must be specified for all of these accounts.

[[certificates-step]]
==== Certificates

Transport Layer Security (TLS) can be configured for both Elasticsearch and Kibana

image:images/marketplace_step6.png[]

TLS can be configured for

Elasticsearch HTTP layer:: exposes Elasticsearch APIs over HTTP. Kibana and Logstash
communicate with Elasticsearch using the HTTP layer through the internal load balancer, 
as does an external load balancer through its public IP address, if deployed.
+
Either a certificate and key can be provided in a PKCS#12 archive (`.p12`/`.pfx`) which will 
be used to secure the HTTP layer of all Elasticsearch nodes, or a Certificate Authority (CA)
certificate and in a PKCS#12 archive can be provided, which will be used to generate a
certificate for each Elasticsearch node to secure the HTTP layer.

Elasticsearch Transport layer:: used for internal communication between Elasticsearch
nodes within the cluster.
+
A Certificate Authority (CA) certificate and in a PKCS#12 archive can be provided 
which will be used to generate a certificate for each Elasticsearch node to secure the Transport layer.

Kibana:: communication between the browser and Kibana, through the public IP address
of Kibana.
+
A certificate and private key can be provided in PEM format to secure communication 
between the browser and Kibana.

Configuring Transport Layer Security (TLS) within the Marketplace UI is _optional_, to 
keep the getting started experience simple for those wishing to try the offering out

image:images/marketplace_step6_2.png[]

[IMPORTANT]
--
**It is highly recommended that you configure TLS, to encrypt communications.** 

TLS is **required** for the Elasticsearch Transport layer with the Security features 
available at the basic license tier in 6.8.0 and 7.1.0+, so if you are intending on using the 
{basicsecurity}[basic license with Security for versions that support it], 
providing certificates as part of a Marketplace deployment will be
easier than not doing so, and then needing to connect to each Elasticsearch node _after_ 
deployment to configure TLS, when activating a basic license.
--

{elasticdocs}/certutil.html[`elasticsearch-certutil`] command tool bundled with 
Elasticsearch can be used to simplify the creations of certificates for use with Transport Layer Security (TLS).

[[azure-marketplace-summary]]
==== Summary

The last steps of configuring a deployment allow you to confirm the values provided
for all inputs in the previous steps, and to read the terms and conditions before
deployment:

image:images/marketplace_step7.png[]

The Azure infrastructure also performs some final validation steps. Once you're
happy to proceed and the OK button is clicked, a new deployment will be started
and within minutes, you'll have Elasticsearch running on Azure!

[[azure-marketplace-accessing-resources]]
=== Accessing resources

[[accessing-elasticsearch]]
==== Accessing Elasticsearch

Elasticsearch can be accessed from outside of Azure through the external load
balancer, if deployed, by navigating to the external load balancer public IP address resource
and using either the IP address or public domain name along with port 9200.
For example,

[source,sh]
----
<http|https>://lb-<random domain name>.<location>.cloudapp.azure.com:9200
----

[[accessing-kibana]]
==== Accessing Kibana

Kibana can be accessed from outside of Azure by navigating to the Kibana public
IP address resource and using either the IP address or public domain name along
with port 5601. For example,

[source,sh]
----
<http|https>://kb-<random domain name>.<location>.cloudapp.azure.com:5601
----

[[accessing-logstash]]
==== Accessing Logstash

Logstash can be accessed from outside of Azure through SSH, using Kibana as
a jumpbox, or deploying the Jumpbox VM.

[[accessing-virtual-machines]]
==== Accessing virtual machines

Virtual machines can be accessed using SSH through either the Kibana VM or Jumpbox
VM over port 22. Both Kibana and Jumpbox VMs are configured with a network security
group that allows TCP traffic over port 22. SSH authentication will use the
authentication mechanism specified in the Basics step,
either `password` or `SSH public key`:

[source,sh]
----
ssh <admin username>@<kibana or jumpbox public IP address>
----

Once connected to the Kibana or Jumpbox VM, other VMs on the virtual network can
be accessed using SSH with either the internal IP address or VM hostname (if using
Azure DNS to resolve addresses from hostnames):

[source,sh]
----
ssh <admin username>@<internal IP address or VM hostname>
----
